{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\HP\\\\Desktop\\\\dashboard redux\\\\dashboard\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import\"react-modern-calendar-datepicker/lib/DatePicker.css\";import{Calendar}from\"react-modern-calendar-datepicker\";import{connect}from\"react-redux\";import{setDate}from\"../store/actions\";import{useDispatch}from\"react-redux\";var Taghvim=function Taghvim(){//   // ✅ a change in default state: { from: ..., to: ... }\nvar _useState=useState({from:null,to:null}),_useState2=_slicedToArray(_useState,2),selectedDayRange=_useState2[0],setSelectedDayRange=_useState2[1];var dispatch=useDispatch();useEffect(function(){if(selectedDayRange){dispatch(setDate(selectedDayRange));}});return/*#__PURE__*/React.createElement(Calendar,{value:selectedDayRange,onChange:setSelectedDayRange,shouldHighlightWeekends:true,locale:\"fa\",calendarTodayClassName:\"custom-today-day\"// also this\n,colorPrimary:\"#bace24\"// added this\n,inputPlaceholder:\"Select a day range\",colorPrimaryLight:\"rgb(196 216 46 / 26%)\"// and this\n});};var mapStateToProps=function mapStateToProps(){return{};};export default connect(mapStateToProps,{setDate:setDate})(Taghvim);","map":{"version":3,"sources":["C:/Users/HP/Desktop/dashboard redux/dashboard/src/Component/Taghvim.jsx"],"names":["React","useState","useEffect","Calendar","connect","setDate","useDispatch","Taghvim","from","to","selectedDayRange","setSelectedDayRange","dispatch","mapStateToProps"],"mappings":"8KAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,MAAO,qDAAP,CACA,OAASC,QAAT,KAAyB,kCAAzB,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,OAAT,KAAwB,kBAAxB,CAEA,OAASC,WAAT,KAA4B,aAA5B,CAEA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAM,CACpB;AADoB,cAE4BN,QAAQ,CAAC,CACvDO,IAAI,CAAE,IADiD,CAEvDC,EAAE,CAAE,IAFmD,CAAD,CAFpC,wCAEbC,gBAFa,eAEKC,mBAFL,eAMpB,GAAMC,CAAAA,QAAQ,CAAGN,WAAW,EAA5B,CACAJ,SAAS,CAAC,UAAM,CACd,GAAKQ,gBAAL,CAAwB,CACtBE,QAAQ,CAACP,OAAO,CAACK,gBAAD,CAAR,CAAR,CACD,CACF,CAJQ,CAAT,CAMA,mBACE,oBAAC,QAAD,EACE,KAAK,CAAEA,gBADT,CAEE,QAAQ,CAAEC,mBAFZ,CAGE,uBAAuB,KAHzB,CAIE,MAAM,CAAC,IAJT,CAKE,sBAAsB,CAAC,kBAAmB;AAL5C,CAME,YAAY,CAAC,SAAU;AANzB,CAOE,gBAAgB,CAAC,oBAPnB,CAQE,iBAAiB,CAAC,uBAAwB;AAR5C,EADF,CAYD,CAzBD,CA0BA,GAAME,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,EAAM,CAC5B,MAAO,EAAP,CACD,CAFD,CAIA,cAAeT,CAAAA,OAAO,CAACS,eAAD,CAAkB,CAAER,OAAO,CAAPA,OAAF,CAAlB,CAAP,CAAsCE,OAAtC,CAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"react-modern-calendar-datepicker/lib/DatePicker.css\";\r\nimport { Calendar } from \"react-modern-calendar-datepicker\";\r\nimport { connect } from \"react-redux\";\r\nimport { setDate } from \"../store/actions\";\r\n\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst Taghvim = () => {\r\n  //   // ✅ a change in default state: { from: ..., to: ... }\r\n  const [selectedDayRange, setSelectedDayRange] = useState({\r\n    from: null,\r\n    to: null,\r\n  });\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    if ((selectedDayRange)) {\r\n      dispatch(setDate(selectedDayRange));\r\n    }\r\n  });\r\n\r\n  return (\r\n    <Calendar\r\n      value={selectedDayRange}\r\n      onChange={setSelectedDayRange}\r\n      shouldHighlightWeekends\r\n      locale=\"fa\"\r\n      calendarTodayClassName=\"custom-today-day\" // also this\r\n      colorPrimary=\"#bace24\" // added this\r\n      inputPlaceholder=\"Select a day range\"\r\n      colorPrimaryLight=\"rgb(196 216 46 / 26%)\" // and this\r\n    />\r\n  );\r\n};\r\nconst mapStateToProps = () => {\r\n  return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, { setDate })(Taghvim);\r\n"]},"metadata":{},"sourceType":"module"}