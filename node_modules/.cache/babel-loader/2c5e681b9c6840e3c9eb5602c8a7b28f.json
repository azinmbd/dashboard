{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\dashboard redux\\\\dashboard\\\\src\\\\Component\\\\Taghvim.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport \"react-modern-calendar-datepicker/lib/DatePicker.css\";\nimport { Calendar } from \"react-modern-calendar-datepicker\";\nimport { connect } from \"react-redux\";\nimport { setDate } from \"../store/actions\";\nimport { useDispatch } from \"react-redux\";\n\nconst Taghvim = () => {\n  //   // ✅ a change in default state: { from: ..., to: ... }\n  const [selectedDayRange, setSelectedDayRange] = useState({\n    from: null,\n    to: null\n  });\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (selectedDayRange.from, selectedDayRange.to) {\n      dispatch(setDate(selectedDayRange));\n    }\n  });\n  return /*#__PURE__*/React.createElement(Calendar, {\n    value: selectedDayRange,\n    onChange: setSelectedDayRange,\n    shouldHighlightWeekends: true,\n    locale: \"fa\",\n    calendarTodayClassName: \"custom-today-day\" // also this\n    ,\n    colorPrimary: \"#bace24\" // added this\n    ,\n    inputPlaceholder: \"Select a day range\",\n    colorPrimaryLight: \"rgb(196 216 46 / 26%)\" // and this\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  });\n};\n\nconst mapStateToProps = () => {\n  return {};\n};\n\nexport default connect(mapStateToProps, {\n  setDate\n})(Taghvim);","map":{"version":3,"sources":["C:/Users/HP/Desktop/dashboard redux/dashboard/src/Component/Taghvim.jsx"],"names":["React","useState","useEffect","Calendar","connect","setDate","useDispatch","Taghvim","selectedDayRange","setSelectedDayRange","from","to","dispatch","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,qDAAP;AACA,SAASC,QAAT,QAAyB,kCAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,kBAAxB;AAEA,SAASC,WAAT,QAA4B,aAA5B;;AAEA,MAAMC,OAAO,GAAG,MAAM;AACpB;AACA,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CR,QAAQ,CAAC;AACvDS,IAAAA,IAAI,EAAE,IADiD;AAEvDC,IAAAA,EAAE,EAAE;AAFmD,GAAD,CAAxD;AAIA,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACAJ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAKM,gBAAgB,CAACE,IAAjB,EAAuBF,gBAAgB,CAACG,EAA7C,EAAkD;AAChDC,MAAAA,QAAQ,CAACP,OAAO,CAACG,gBAAD,CAAR,CAAR;AACD;AACF,GAJQ,CAAT;AAMA,sBACE,oBAAC,QAAD;AACE,IAAA,KAAK,EAAEA,gBADT;AAEE,IAAA,QAAQ,EAAEC,mBAFZ;AAGE,IAAA,uBAAuB,MAHzB;AAIE,IAAA,MAAM,EAAC,IAJT;AAKE,IAAA,sBAAsB,EAAC,kBALzB,CAK4C;AAL5C;AAME,IAAA,YAAY,EAAC,SANf,CAMyB;AANzB;AAOE,IAAA,gBAAgB,EAAC,oBAPnB;AAQE,IAAA,iBAAiB,EAAC,uBARpB,CAQ4C;AAR5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAYD,CAzBD;;AA0BA,MAAMI,eAAe,GAAG,MAAM;AAC5B,SAAO,EAAP;AACD,CAFD;;AAIA,eAAeT,OAAO,CAACS,eAAD,EAAkB;AAAER,EAAAA;AAAF,CAAlB,CAAP,CAAsCE,OAAtC,CAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"react-modern-calendar-datepicker/lib/DatePicker.css\";\r\nimport { Calendar } from \"react-modern-calendar-datepicker\";\r\nimport { connect } from \"react-redux\";\r\nimport { setDate } from \"../store/actions\";\r\n\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst Taghvim = () => {\r\n  //   // ✅ a change in default state: { from: ..., to: ... }\r\n  const [selectedDayRange, setSelectedDayRange] = useState({\r\n    from: null,\r\n    to: null,\r\n  });\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    if ((selectedDayRange.from, selectedDayRange.to)) {\r\n      dispatch(setDate(selectedDayRange));\r\n    }\r\n  });\r\n\r\n  return (\r\n    <Calendar\r\n      value={selectedDayRange}\r\n      onChange={setSelectedDayRange}\r\n      shouldHighlightWeekends\r\n      locale=\"fa\"\r\n      calendarTodayClassName=\"custom-today-day\" // also this\r\n      colorPrimary=\"#bace24\" // added this\r\n      inputPlaceholder=\"Select a day range\"\r\n      colorPrimaryLight=\"rgb(196 216 46 / 26%)\" // and this\r\n    />\r\n  );\r\n};\r\nconst mapStateToProps = () => {\r\n  return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, { setDate })(Taghvim);\r\n"]},"metadata":{},"sourceType":"module"}