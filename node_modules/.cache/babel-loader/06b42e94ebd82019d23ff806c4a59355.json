{"ast":null,"code":"import axios from 'axios';\nexport * from '../slices/AllBuildingsSlice'; // default id password action\n// -------------------------------------------------------------------------------\n// export const fetchAllBuildings = () => async (dispatch) => {\n//   const response = await axios.get(\n//     'https://api.lora.atrovan.com/api/buildings/all?password=asd123'\n//   );\n//   dispatch({\n//     type: 'FETCH_ALL_BUILDINGS',\n//     payload: response.data.data[0].uuid,\n//   });\n// };\n// home page actions for towers\n// --------HOME PAGE-----------------------------------------------------------------------\n\nexport const fetchBuildingAssets = uuid => async dispatch => {\n  console.log(object);\n  const response = await axios.get(`https://api.lora.atrovan.com/api/assets/building/${uuid}?limit=100`);\n  dispatch({\n    type: 'FETCH_BUILDING_ASSETS',\n    payload: response.data.data\n  });\n};\nexport const fetchAssetDevicesCount = ({\n  assetId,\n  type\n}) => async dispatch => {\n  const response = await axios.get(`https://api.lora.atrovan.com/api/devices/asset/${assetId}?limit=100&type=${type}`);\n  console.log(response.data.data.length);\n  dispatch({\n    type: 'FETCH_ASSET_DEVICES_COUNT',\n    payload: response.data.data\n  });\n}; // -------HOME PAGE DETAIL------------------------------------------------------------------------\n// home page to towe detail page actions\n\nexport const setAssetDetail = ({\n  assetId,\n  type\n}) => async dispatch => {\n  const response = {\n    data: {\n      assetId,\n      type\n    }\n  };\n  dispatch({\n    type: 'SET_ASSET_DETAIL',\n    payload: response.data\n  });\n};\nexport const fetchSingleAsset = ({\n  assetId,\n  type\n}) => async dispatch => {\n  if (assetId, type !== undefined) {\n    const response = await axios.get(`https://api.lora.atrovan.com/api/asset/${assetId}`);\n    dispatch({\n      type: 'FETCH_SINGLE_ASSET',\n      payload: response.data\n    });\n  }\n};\nexport const fetchAssetDevices = ({\n  assetId,\n  type\n}) => async dispatch => {\n  const response = await axios.get(`https://api.lora.atrovan.com/api/devices/asset/${assetId}?limit=100&type=${type}`);\n  dispatch({\n    type: 'FETCH_ASSET_DEVICES',\n    payload: response.data.data\n  });\n}; // ---------Reports PAGE----------------------------------------------------------------------\n// Reports page actions\n\nexport const fetchBuildingDevices = uuid => async dispatch => {\n  const response = await axios.get(`https://api.lora.atrovan.com/api/devices/building/${uuid}?limit=100`);\n  dispatch({\n    type: 'FETCH_BUILDING_DEVICES',\n    payload: response.data\n  });\n};\nexport const searchBuildingDevices = ({\n  buildingId,\n  searchText\n}) => async dispatch => {\n  const response = await axios.get(`https://api.lora.atrovan.com/api/devices/building/${buildingId}?limit=100&textSearch=${searchText}`);\n  dispatch({\n    type: 'SEARCH_BUILDING_DEVICES',\n    payload: response.data.data\n  });\n}; //see get date and detail to get bill\n\nexport const setItem = item => async dispatch => {\n  const response = {\n    data: {\n      item\n    }\n  };\n  dispatch({\n    type: 'SET_ITEM',\n    payload: response.data\n  });\n};\nexport const setDate = dateRange => async dispatch => {\n  const response = {\n    data: {\n      dateRange\n    }\n  };\n  dispatch({\n    type: 'DATE_RANGE',\n    payload: response.data\n  });\n};\nexport const fetchBillData = ({\n  deviceID,\n  beginTime,\n  endTime\n}) => async dispatch => {\n  const response = await axios.get(`https://api.lora.atrovan.com/api/device/${deviceID}/bill?beginTime=${beginTime}&endTime=${endTime}`);\n  dispatch({\n    type: 'GET_BILL',\n    payload: response.data\n  });\n};","map":{"version":3,"sources":["C:/Users/HP/Desktop/dashboard redux/dashboard/src/store/actions/index.js"],"names":["axios","fetchBuildingAssets","uuid","dispatch","console","log","object","response","get","type","payload","data","fetchAssetDevicesCount","assetId","length","setAssetDetail","fetchSingleAsset","undefined","fetchAssetDevices","fetchBuildingDevices","searchBuildingDevices","buildingId","searchText","setItem","item","setDate","dateRange","fetchBillData","deviceID","beginTime","endTime"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\n\r\nexport * from '../slices/AllBuildingsSlice';\r\n\r\n// default id password action\r\n// -------------------------------------------------------------------------------\r\n\r\n// export const fetchAllBuildings = () => async (dispatch) => {\r\n//   const response = await axios.get(\r\n//     'https://api.lora.atrovan.com/api/buildings/all?password=asd123'\r\n//   );\r\n//   dispatch({\r\n//     type: 'FETCH_ALL_BUILDINGS',\r\n//     payload: response.data.data[0].uuid,\r\n//   });\r\n// };\r\n\r\n// home page actions for towers\r\n// --------HOME PAGE-----------------------------------------------------------------------\r\nexport const fetchBuildingAssets = (uuid) => async (dispatch) => {\r\n  console.log(object);\r\n  const response = await axios.get(\r\n    `https://api.lora.atrovan.com/api/assets/building/${uuid}?limit=100`\r\n  );\r\n  dispatch({\r\n    type: 'FETCH_BUILDING_ASSETS',\r\n    payload: response.data.data,\r\n  });\r\n};\r\n\r\nexport const fetchAssetDevicesCount = ({ assetId, type }) => async (dispatch) => {\r\n  const response = await axios.get(\r\n    `https://api.lora.atrovan.com/api/devices/asset/${assetId}?limit=100&type=${type}`\r\n  );\r\n  console.log(response.data.data.length);\r\n  dispatch({\r\n    type: 'FETCH_ASSET_DEVICES_COUNT',\r\n    payload: response.data.data,\r\n  });\r\n};\r\n\r\n// -------HOME PAGE DETAIL------------------------------------------------------------------------\r\n// home page to towe detail page actions\r\n\r\nexport const setAssetDetail = ({ assetId, type }) => async (dispatch) => {\r\n  const response = {\r\n    data: {\r\n      assetId,\r\n      type,\r\n    },\r\n  };\r\n  dispatch({\r\n    type: 'SET_ASSET_DETAIL',\r\n    payload: response.data,\r\n  });\r\n};\r\nexport const fetchSingleAsset = ({ assetId, type }) => async (dispatch) => {\r\n  if ((assetId, type !== undefined)) {\r\n    const response = await axios.get(`https://api.lora.atrovan.com/api/asset/${assetId}`);\r\n\r\n    dispatch({\r\n      type: 'FETCH_SINGLE_ASSET',\r\n      payload: response.data,\r\n    });\r\n  }\r\n};\r\nexport const fetchAssetDevices = ({ assetId, type }) => async (dispatch) => {\r\n  const response = await axios.get(\r\n    `https://api.lora.atrovan.com/api/devices/asset/${assetId}?limit=100&type=${type}`\r\n  );\r\n\r\n  dispatch({\r\n    type: 'FETCH_ASSET_DEVICES',\r\n    payload: response.data.data,\r\n  });\r\n};\r\n\r\n// ---------Reports PAGE----------------------------------------------------------------------\r\n// Reports page actions\r\n\r\nexport const fetchBuildingDevices = (uuid) => async (dispatch) => {\r\n  const response = await axios.get(\r\n    `https://api.lora.atrovan.com/api/devices/building/${uuid}?limit=100`\r\n  );\r\n\r\n  dispatch({\r\n    type: 'FETCH_BUILDING_DEVICES',\r\n    payload: response.data,\r\n  });\r\n};\r\n\r\nexport const searchBuildingDevices = ({ buildingId, searchText }) => async (dispatch) => {\r\n  const response = await axios.get(\r\n    `https://api.lora.atrovan.com/api/devices/building/${buildingId}?limit=100&textSearch=${searchText}`\r\n  );\r\n  dispatch({\r\n    type: 'SEARCH_BUILDING_DEVICES',\r\n    payload: response.data.data,\r\n  });\r\n};\r\n\r\n//see get date and detail to get bill\r\n\r\nexport const setItem = (item) => async (dispatch) => {\r\n  const response = {\r\n    data: {\r\n      item,\r\n    },\r\n  };\r\n  dispatch({\r\n    type: 'SET_ITEM',\r\n    payload: response.data,\r\n  });\r\n};\r\n\r\nexport const setDate = (dateRange) => async (dispatch) => {\r\n  const response = {\r\n    data: {\r\n      dateRange,\r\n    },\r\n  };\r\n  dispatch({\r\n    type: 'DATE_RANGE',\r\n    payload: response.data,\r\n  });\r\n};\r\n\r\nexport const fetchBillData = ({ deviceID, beginTime, endTime }) => async (dispatch) => {\r\n  const response = await axios.get(\r\n    `https://api.lora.atrovan.com/api/device/${deviceID}/bill?beginTime=${beginTime}&endTime=${endTime}`\r\n  );\r\n  dispatch({\r\n    type: 'GET_BILL',\r\n    payload: response.data,\r\n  });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}