{"ast":null,"code":"import axios from \"axios\";\nexport const fetchDevicesID = () => async dispatch => {\n  const response = await axios.get(\"https://api.lora.atrovan.com/api/telemetry/devices/id\");\n  dispatch({\n    type: \"FETCH_DEVICES_ID\",\n    payload: response.data\n  });\n};\nexport const fetchDevicesData = id => async dispatch => {\n  for (let i = 0; i < id.length; i++) {\n    const elementID = id[i];\n    const response = await axios.get(`https://api.lora.atrovan.com/api/telemetry/device/latest/${elementID}`);\n    dispatch({\n      type: \"FETCH_DEVICES_DATA\",\n      payload: response.data.options\n    });\n  }\n};\nexport const fetchAllBuildings = () => async dispatch => {\n  const response = await axios.get(\"https://api.lora.atrovan.com/api/buildings/all?password=asd123\");\n  dispatch({\n    type: \"FETCH_ALL_BUILDINGS\",\n    payload: response.data.data\n  });\n};\nexport const fetchBuildingAssets = uuid => async dispatch => {\n  const response = await axios.get(`https://api.lora.atrovan.com/api/assets/building/${uuid}?limit=100`);\n  dispatch({\n    type: \"FETCH_BUILDING_ASSETS\",\n    payload: response.data.data\n  });\n};\nexport const fetchAssetDevices = ({\n  assetId,\n  type\n}) => async dispatch => {\n  console.log(assetId, type);\n\n  for (let i = 0; i < id.length; i++) {\n    const assetId = id[i];\n    const response = await axios.get(`https://api.lora.atrovan.com/api/devices/asset/${assetId}?limit=100&type=${type}`);\n  }\n\n  console.log(response.data.data);\n  console.log(response.config.url);\n  dispatch({\n    type: \"FETCH_ASSET_DEVICES\",\n    payload: response.data.data\n  });\n};","map":{"version":3,"sources":["C:/Users/HP/Desktop/dashboard redux/dashboard/src/store/actions/index.js"],"names":["axios","fetchDevicesID","dispatch","response","get","type","payload","data","fetchDevicesData","id","i","length","elementID","options","fetchAllBuildings","fetchBuildingAssets","uuid","fetchAssetDevices","assetId","console","log","config","url"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,cAAc,GAAG,MAAM,MAAOC,QAAP,IAAoB;AACtD,QAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAN,CACrB,uDADqB,CAAvB;AAGAF,EAAAA,QAAQ,CAAC;AACPG,IAAAA,IAAI,EAAE,kBADC;AAEPC,IAAAA,OAAO,EAAEH,QAAQ,CAACI;AAFX,GAAD,CAAR;AAID,CARM;AAUP,OAAO,MAAMC,gBAAgB,GAAIC,EAAD,IAAQ,MAAOP,QAAP,IAAoB;AAC1D,OAAK,IAAIQ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,EAAE,CAACE,MAAvB,EAA+BD,CAAC,EAAhC,EAAoC;AAClC,UAAME,SAAS,GAAGH,EAAE,CAACC,CAAD,CAApB;AACA,UAAMP,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAN,CACpB,4DAA2DQ,SAAU,EADjD,CAAvB;AAGAV,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAE,oBADC;AAEPC,MAAAA,OAAO,EAAEH,QAAQ,CAACI,IAAT,CAAcM;AAFhB,KAAD,CAAR;AAID;AACF,CAXM;AAaP,OAAO,MAAMC,iBAAiB,GAAG,MAAM,MAAOZ,QAAP,IAAoB;AACzD,QAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAN,CACrB,gEADqB,CAAvB;AAGAF,EAAAA,QAAQ,CAAC;AACPG,IAAAA,IAAI,EAAE,qBADC;AAEPC,IAAAA,OAAO,EAAEH,QAAQ,CAACI,IAAT,CAAcA;AAFhB,GAAD,CAAR;AAID,CARM;AAUP,OAAO,MAAMQ,mBAAmB,GAAIC,IAAD,IAAU,MAAOd,QAAP,IAAoB;AAC/D,QAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAN,CACpB,oDAAmDY,IAAK,YADpC,CAAvB;AAIAd,EAAAA,QAAQ,CAAC;AACPG,IAAAA,IAAI,EAAE,uBADC;AAEPC,IAAAA,OAAO,EAAEH,QAAQ,CAACI,IAAT,CAAcA;AAFhB,GAAD,CAAR;AAID,CATM;AAWP,OAAO,MAAMU,iBAAiB,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWb,EAAAA;AAAX,CAAD,KAAuB,MAAOH,QAAP,IAAoB;AAC1EiB,EAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ,EAAqBb,IAArB;;AACA,OAAK,IAAIK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,EAAE,CAACE,MAAvB,EAA+BD,CAAC,EAAhC,EAAoC;AAClC,UAAMQ,OAAO,GAAGT,EAAE,CAACC,CAAD,CAAlB;AACA,UAAMP,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAN,CACpB,kDAAiDc,OAAQ,mBAAkBb,IAAK,EAD5D,CAAvB;AAGD;;AACDc,EAAAA,OAAO,CAACC,GAAR,CAAYjB,QAAQ,CAACI,IAAT,CAAcA,IAA1B;AACAY,EAAAA,OAAO,CAACC,GAAR,CAAYjB,QAAQ,CAACkB,MAAT,CAAgBC,GAA5B;AAEApB,EAAAA,QAAQ,CAAC;AACPG,IAAAA,IAAI,EAAE,qBADC;AAEPC,IAAAA,OAAO,EAAEH,QAAQ,CAACI,IAAT,CAAcA;AAFhB,GAAD,CAAR;AAID,CAfM","sourcesContent":["import axios from \"axios\";\r\n\r\nexport const fetchDevicesID = () => async (dispatch) => {\r\n  const response = await axios.get(\r\n    \"https://api.lora.atrovan.com/api/telemetry/devices/id\"\r\n  );\r\n  dispatch({\r\n    type: \"FETCH_DEVICES_ID\",\r\n    payload: response.data,\r\n  });\r\n};\r\n\r\nexport const fetchDevicesData = (id) => async (dispatch) => {\r\n  for (let i = 0; i < id.length; i++) {\r\n    const elementID = id[i];\r\n    const response = await axios.get(\r\n      `https://api.lora.atrovan.com/api/telemetry/device/latest/${elementID}`\r\n    );\r\n    dispatch({\r\n      type: \"FETCH_DEVICES_DATA\",\r\n      payload: response.data.options,\r\n    });\r\n  }\r\n};\r\n\r\nexport const fetchAllBuildings = () => async (dispatch) => {\r\n  const response = await axios.get(\r\n    \"https://api.lora.atrovan.com/api/buildings/all?password=asd123\"\r\n  );\r\n  dispatch({\r\n    type: \"FETCH_ALL_BUILDINGS\",\r\n    payload: response.data.data,\r\n  });\r\n};\r\n\r\nexport const fetchBuildingAssets = (uuid) => async (dispatch) => {\r\n  const response = await axios.get(\r\n    `https://api.lora.atrovan.com/api/assets/building/${uuid}?limit=100`\r\n  );\r\n\r\n  dispatch({\r\n    type: \"FETCH_BUILDING_ASSETS\",\r\n    payload: response.data.data,\r\n  });\r\n};\r\n\r\nexport const fetchAssetDevices = ({ assetId, type }) => async (dispatch) => {\r\n  console.log(assetId, type);\r\n  for (let i = 0; i < id.length; i++) {\r\n    const assetId = id[i];\r\n    const response = await axios.get(\r\n      `https://api.lora.atrovan.com/api/devices/asset/${assetId}?limit=100&type=${type}`\r\n    );\r\n  }\r\n  console.log(response.data.data);\r\n  console.log(response.config.url);\r\n\r\n  dispatch({\r\n    type: \"FETCH_ASSET_DEVICES\",\r\n    payload: response.data.data,\r\n  });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}