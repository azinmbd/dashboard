{"ast":null,"code":"import axios from \"axios\";\nexport const fetchDevicesID = () => async dispatch => {\n  const response = await axios.get(\"https://api.lora.atrovan.com/api/telemetry/devices/id\");\n  dispatch({\n    type: \"FETCH_DEVICES_ID\",\n    payload: response.data\n  });\n};\nexport const fetchDevicesData = id => async dispatch => {\n  for (let i = 0; i < id.length; i++) {\n    const elementID = id[i];\n    const response = await axios.get(`https://api.lora.atrovan.com/api/telemetry/device/latest/${elementID}`);\n    dispatch({\n      type: \"FETCH_DEVICES_DATA\",\n      payload: response.data.options\n    });\n  }\n};\nexport const fetchAllBuildings = () => async dispatch => {\n  const response = await axios.get(\"https://api.lora.atrovan.com/api/buildings/all?password=asd123\");\n  dispatch({\n    type: \"FETCH_ALL_BUILDINGS\",\n    payload: response.data.data\n  });\n};\nexport const fetchBuildingAssets = uuid => async dispatch => {\n  const response = await axios.get(`https://api.lora.atrovan.com/api/assets/building/${uuid}?limit=100`);\n  console.log(response);\n  dispatch({\n    type: \"FETCH_BUILDING_ASSETS\",\n    payload: response.data.data\n  });\n};\nexport const fetchAssetDevices = uuid => async dispatch => {\n  const response = await axios.get(`https://api.lora.atrovan.com/api/devices/asset/${assetId}?limit=100&type=`);\n  console.log(response);\n  dispatch({\n    type: \"FETCH_BUILDING_ASSETS\",\n    payload: response.data.data\n  });\n};\nvar requestOptions = {\n  method: 'GET',\n  redirect: 'follow'\n};\nfetch(\"https://api.lora.atrovan.com/api/devices/asset/559bf8d4-abea-11ea-b951-97149fe1d3b0?limit=100&type=کنتور برق\", requestOptions).then(response => response.text()).then(result => console.log(result)).catch(error => console.log('error', error));","map":{"version":3,"sources":["C:/Users/HP/Desktop/dashboard redux/dashboard/src/store/actions/index.js"],"names":["axios","fetchDevicesID","dispatch","response","get","type","payload","data","fetchDevicesData","id","i","length","elementID","options","fetchAllBuildings","fetchBuildingAssets","uuid","console","log","fetchAssetDevices","assetId","requestOptions","method","redirect","fetch","then","text","result","catch","error"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,cAAc,GAAG,MAAM,MAAOC,QAAP,IAAoB;AACtD,QAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAN,CACrB,uDADqB,CAAvB;AAGAF,EAAAA,QAAQ,CAAC;AACPG,IAAAA,IAAI,EAAE,kBADC;AAEPC,IAAAA,OAAO,EAAEH,QAAQ,CAACI;AAFX,GAAD,CAAR;AAID,CARM;AAWP,OAAO,MAAMC,gBAAgB,GAAIC,EAAD,IAAQ,MAAOP,QAAP,IAAoB;AAC1D,OAAK,IAAIQ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,EAAE,CAACE,MAAvB,EAA+BD,CAAC,EAAhC,EAAoC;AAClC,UAAME,SAAS,GAAGH,EAAE,CAACC,CAAD,CAApB;AACA,UAAMP,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAN,CACpB,4DAA2DQ,SAAU,EADjD,CAAvB;AAGAV,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAE,oBADC;AAEPC,MAAAA,OAAO,EAAEH,QAAQ,CAACI,IAAT,CAAcM;AAFhB,KAAD,CAAR;AAID;AACF,CAXM;AAcP,OAAO,MAAMC,iBAAiB,GAAG,MAAM,MAAOZ,QAAP,IAAoB;AACzD,QAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAN,CACrB,gEADqB,CAAvB;AAGAF,EAAAA,QAAQ,CAAC;AACPG,IAAAA,IAAI,EAAE,qBADC;AAEPC,IAAAA,OAAO,EAAEH,QAAQ,CAACI,IAAT,CAAcA;AAFhB,GAAD,CAAR;AAID,CARM;AAWP,OAAO,MAAMQ,mBAAmB,GAAIC,IAAD,IAAU,MAAOd,QAAP,IAAoB;AAC/D,QAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAN,CACpB,oDAAmDY,IAAK,YADpC,CAAvB;AAGAC,EAAAA,OAAO,CAACC,GAAR,CAAYf,QAAZ;AAEAD,EAAAA,QAAQ,CAAC;AACPG,IAAAA,IAAI,EAAE,uBADC;AAEPC,IAAAA,OAAO,EAAEH,QAAQ,CAACI,IAAT,CAAcA;AAFhB,GAAD,CAAR;AAID,CAVM;AAaP,OAAO,MAAMY,iBAAiB,GAAIH,IAAD,IAAU,MAAOd,QAAP,IAAoB;AAC7D,QAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAN,CACpB,kDAAiDgB,OAAQ,kBADrC,CAAvB;AAGAH,EAAAA,OAAO,CAACC,GAAR,CAAYf,QAAZ;AAEAD,EAAAA,QAAQ,CAAC;AACPG,IAAAA,IAAI,EAAE,uBADC;AAEPC,IAAAA,OAAO,EAAEH,QAAQ,CAACI,IAAT,CAAcA;AAFhB,GAAD,CAAR;AAID,CAVM;AAYP,IAAIc,cAAc,GAAG;AACnBC,EAAAA,MAAM,EAAE,KADW;AAEnBC,EAAAA,QAAQ,EAAE;AAFS,CAArB;AAKAC,KAAK,CAAC,8GAAD,EAAiHH,cAAjH,CAAL,CACGI,IADH,CACQtB,QAAQ,IAAIA,QAAQ,CAACuB,IAAT,EADpB,EAEGD,IAFH,CAEQE,MAAM,IAAIV,OAAO,CAACC,GAAR,CAAYS,MAAZ,CAFlB,EAGGC,KAHH,CAGSC,KAAK,IAAIZ,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBW,KAArB,CAHlB","sourcesContent":["import axios from \"axios\";\r\n\r\nexport const fetchDevicesID = () => async (dispatch) => {\r\n  const response = await axios.get(\r\n    \"https://api.lora.atrovan.com/api/telemetry/devices/id\"\r\n  );\r\n  dispatch({\r\n    type: \"FETCH_DEVICES_ID\",\r\n    payload: response.data,\r\n  });\r\n};\r\n\r\n\r\nexport const fetchDevicesData = (id) => async (dispatch) => {\r\n  for (let i = 0; i < id.length; i++) {\r\n    const elementID = id[i];\r\n    const response = await axios.get(\r\n      `https://api.lora.atrovan.com/api/telemetry/device/latest/${elementID}`\r\n    );\r\n    dispatch({\r\n      type: \"FETCH_DEVICES_DATA\",\r\n      payload: response.data.options,\r\n    });\r\n  }\r\n};\r\n\r\n\r\nexport const fetchAllBuildings = () => async (dispatch) => {\r\n  const response = await axios.get(\r\n    \"https://api.lora.atrovan.com/api/buildings/all?password=asd123\"\r\n  );\r\n  dispatch({\r\n    type: \"FETCH_ALL_BUILDINGS\",\r\n    payload: response.data.data,\r\n  });\r\n};\r\n\r\n\r\nexport const fetchBuildingAssets = (uuid) => async (dispatch) => {\r\n  const response = await axios.get(\r\n    `https://api.lora.atrovan.com/api/assets/building/${uuid}?limit=100`\r\n  );\r\n  console.log(response);\r\n\r\n  dispatch({\r\n    type: \"FETCH_BUILDING_ASSETS\",\r\n    payload: response.data.data,\r\n  });\r\n};\r\n\r\n\r\nexport const fetchAssetDevices = (uuid) => async (dispatch) => {\r\n  const response = await axios.get(\r\n    `https://api.lora.atrovan.com/api/devices/asset/${assetId}?limit=100&type=`\r\n  );\r\n  console.log(response);\r\n\r\n  dispatch({\r\n    type: \"FETCH_BUILDING_ASSETS\",\r\n    payload: response.data.data,\r\n  });\r\n};\r\n\r\nvar requestOptions = {\r\n  method: 'GET',\r\n  redirect: 'follow'\r\n};\r\n\r\nfetch(\"https://api.lora.atrovan.com/api/devices/asset/559bf8d4-abea-11ea-b951-97149fe1d3b0?limit=100&type=کنتور برق\", requestOptions)\r\n  .then(response => response.text())\r\n  .then(result => console.log(result))\r\n  .catch(error => console.log('error', error));\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}