{"ast":null,"code":"import axios from \"axios\"; // default id password action\n// -----------------------------------------------------------\n\nexport const fetchAllBuildings = () => async dispatch => {\n  const response = await axios.get(\"https://api.lora.atrovan.com/api/buildings/all?password=asd123\");\n  dispatch({\n    type: \"FETCH_ALL_BUILDINGS\",\n    payload: response.data.data\n  });\n}; // home page actions for towers\n// -----------------------------------------------------------\n\nexport const fetchAssetDevices = ({\n  assetId,\n  type\n}) => async dispatch => {\n  const response = await axios.get(`https://api.lora.atrovan.com/api/devices/asset/${assetId}?limit=100&type=${type}`);\n  console.log(response.data);\n  dispatch({\n    type: \"FETCH_ASSET_DEVICES\",\n    payload: response.data.data\n  });\n};\nexport const fetchSinaDevices = ({\n  assetId,\n  type\n}) => async dispatch => {\n  const response = await axios.get(`https://api.lora.atrovan.com/api/devices/asset/${assetId}?limit=100&type=${type}`);\n  console.log(response.data);\n  dispatch({\n    type: \"FETCH_SINA_DEVICES\",\n    payload: response.data.data\n  });\n};\nexport const fetchMasudDevices = ({\n  assetId,\n  type\n}) => async dispatch => {\n  const response = await axios.get(`https://api.lora.atrovan.com/api/devices/asset/${assetId}?limit=100&type=${type}`);\n  console.log(response.data);\n  dispatch({\n    type: \"FETCH_MASUD_DEVICES\",\n    payload: response.data.data\n  });\n};\nexport const fetchSingleAsset = ({\n  assetId,\n  type\n}) => async dispatch => {\n  if (assetId, type !== undefined) {\n    const response = await axios.get(`https://api.lora.atrovan.com/api/asset/${assetId}`);\n    dispatch({\n      type: \"FETCH_SINGLE_ASSET\",\n      payload: response.data\n    });\n  }\n}; // -------------------------------------------------------------------------------\n// home page to towe detail page actions \n\nexport const setAssetDetail = ({\n  assetId,\n  type,\n  sinaCount,\n  masudCount\n}) => async dispatch => {\n  const response = {\n    data: {\n      assetId,\n      type,\n      sinaCount,\n      masudCount\n    }\n  };\n  dispatch({\n    type: \"SET_ASSET_DETAIL\",\n    payload: response.data\n  });\n};\nexport const fetchBuildingAssets = uuid => async dispatch => {\n  const response = await axios.get(`https://api.lora.atrovan.com/api/assets/building/${uuid}?limit=100`);\n  dispatch({\n    type: \"FETCH_BUILDING_ASSETS\",\n    payload: response.data.data\n  });\n}; // -----------------------------------------------------------\n// gozareshat page actions \n\nexport const fetchBuildingDevices = uuid => async dispatch => {\n  const response = await axios.get(`https://api.lora.atrovan.com/api/devices/building/${uuid}?limit=100`);\n  dispatch({\n    type: \"FETCH_BUILDING_DEVICES\",\n    payload: response.data\n  });\n};\nexport const searchBuildingDevices = ({\n  buildingId,\n  searchText\n}) => async dispatch => {\n  console.log({\n    buildingId,\n    searchText\n  });\n  const response = await axios.get(`https://api.lora.atrovan.com/api/devices/building/${buildingId}?limit=100&textSearch=${searchText}`);\n  console.log(response);\n  dispatch({\n    type: \"SEARCH_BUILDING_DEVICES\",\n    payload: response.data\n  });\n}; // old data fetch\n// export const fetchDevicesID = () => async (dispatch) => {\n//   const response = await axios.get(\n//     \"https://api.lora.atrovan.com/api/telemetry/devices/id\"\n//   );\n//   dispatch({\n//     type: \"FETCH_DEVICES_ID\",\n//     payload: response.data,\n//   });\n// };\n// export const fetchDevicesData = (id) => async (dispatch) => {\n//   for (let i = 0; i < id.length; i++) {\n//     const elementID = id[i];\n//     const response = await axios.get(\n//       `https://api.lora.atrovan.com/api/telemetry/device/latest/${elementID}`\n//     );\n//     dispatch({\n//       type: \"FETCH_DEVICES_DATA\",\n//       payload: response.data.options,\n//     });\n//   }\n// };","map":{"version":3,"sources":["C:/Users/HP/Desktop/dashboard redux/dashboard/src/store/actions/index.js"],"names":["axios","fetchAllBuildings","dispatch","response","get","type","payload","data","fetchAssetDevices","assetId","console","log","fetchSinaDevices","fetchMasudDevices","fetchSingleAsset","undefined","setAssetDetail","sinaCount","masudCount","fetchBuildingAssets","uuid","fetchBuildingDevices","searchBuildingDevices","buildingId","searchText"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\n// default id password action\r\n// -----------------------------------------------------------\r\n\r\nexport const fetchAllBuildings = () => async (dispatch) => {\r\n  const response = await axios.get(\r\n    \"https://api.lora.atrovan.com/api/buildings/all?password=asd123\"\r\n  );\r\n  dispatch({\r\n    type: \"FETCH_ALL_BUILDINGS\",\r\n    payload: response.data.data,\r\n  });\r\n};\r\n\r\n\r\n// home page actions for towers\r\n// -----------------------------------------------------------\r\n\r\nexport const fetchAssetDevices = ({ assetId, type }) => async (dispatch) => {\r\n    const response = await axios.get(\r\n      `https://api.lora.atrovan.com/api/devices/asset/${assetId}?limit=100&type=${type}`\r\n    );\r\n    console.log(response.data);\r\n    dispatch({\r\n      type: \"FETCH_ASSET_DEVICES\",\r\n      payload: response.data.data,\r\n    });\r\n};\r\nexport const fetchSinaDevices = ({ assetId, type }) => async (dispatch) => {\r\n    const response = await axios.get(\r\n      `https://api.lora.atrovan.com/api/devices/asset/${assetId}?limit=100&type=${type}`\r\n    );\r\n    console.log(response.data);\r\n    dispatch({\r\n      type: \"FETCH_SINA_DEVICES\",\r\n      payload: response.data.data,\r\n    });\r\n};\r\nexport const fetchMasudDevices = ({ assetId, type }) => async (dispatch) => {\r\n    const response = await axios.get(\r\n      `https://api.lora.atrovan.com/api/devices/asset/${assetId}?limit=100&type=${type}`\r\n    );\r\n    console.log(response.data);\r\n    dispatch({\r\n      type: \"FETCH_MASUD_DEVICES\",\r\n      payload: response.data.data,\r\n    });\r\n};\r\n\r\nexport const fetchSingleAsset = ({ assetId, type }) => async (dispatch) => {\r\n  if ((assetId, type !== undefined)) {\r\n    const response = await axios.get(\r\n      `https://api.lora.atrovan.com/api/asset/${assetId}`\r\n    );\r\n\r\n    dispatch({\r\n      type: \"FETCH_SINGLE_ASSET\",\r\n      payload: response.data,\r\n    });\r\n  }\r\n};\r\n\r\n// -------------------------------------------------------------------------------\r\n// home page to towe detail page actions \r\n\r\nexport const setAssetDetail = ({\r\n  assetId,\r\n  type,\r\n  sinaCount,\r\n  masudCount,\r\n}) => async (dispatch) => {\r\n  const response = {\r\n    data: {\r\n      assetId,\r\n      type,\r\n      sinaCount,\r\n      masudCount,\r\n    },\r\n  };\r\n  dispatch({\r\n    type: \"SET_ASSET_DETAIL\",\r\n    payload: response.data,\r\n  });\r\n};\r\n\r\nexport const fetchBuildingAssets = (uuid) => async (dispatch) => {\r\n  const response = await axios.get(\r\n    `https://api.lora.atrovan.com/api/assets/building/${uuid}?limit=100`\r\n  );\r\n\r\n  dispatch({\r\n    type: \"FETCH_BUILDING_ASSETS\",\r\n    payload: response.data.data,\r\n  });\r\n};\r\n// -----------------------------------------------------------\r\n// gozareshat page actions \r\n\r\nexport const fetchBuildingDevices = ( uuid ) => async (dispatch) => {\r\n    const response = await axios.get(\r\n     `https://api.lora.atrovan.com/api/devices/building/${uuid}?limit=100`\r\n    );\r\n\r\n    \r\n    dispatch({\r\n      type: \"FETCH_BUILDING_DEVICES\",\r\n      payload: response.data,\r\n    });\r\n};\r\n\r\nexport const searchBuildingDevices = ( {buildingId, searchText} ) => async (dispatch) => {\r\n  console.log({buildingId, searchText});\r\n    const response = await axios.get(\r\n     `https://api.lora.atrovan.com/api/devices/building/${buildingId}?limit=100&textSearch=${searchText}`\r\n    );\r\n\r\n    console.log(response);\r\n    \r\n    dispatch({\r\n      type: \"SEARCH_BUILDING_DEVICES\",\r\n      payload: response.data,\r\n    });\r\n};\r\n\r\n\r\n\r\n\r\n// old data fetch\r\n\r\n// export const fetchDevicesID = () => async (dispatch) => {\r\n//   const response = await axios.get(\r\n//     \"https://api.lora.atrovan.com/api/telemetry/devices/id\"\r\n//   );\r\n//   dispatch({\r\n//     type: \"FETCH_DEVICES_ID\",\r\n//     payload: response.data,\r\n//   });\r\n// };\r\n\r\n// export const fetchDevicesData = (id) => async (dispatch) => {\r\n//   for (let i = 0; i < id.length; i++) {\r\n//     const elementID = id[i];\r\n//     const response = await axios.get(\r\n//       `https://api.lora.atrovan.com/api/telemetry/device/latest/${elementID}`\r\n//     );\r\n//     dispatch({\r\n//       type: \"FETCH_DEVICES_DATA\",\r\n//       payload: response.data.options,\r\n//     });\r\n//   }\r\n// };"]},"metadata":{},"sourceType":"module"}