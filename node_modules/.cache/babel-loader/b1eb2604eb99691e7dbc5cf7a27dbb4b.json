{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\work\\\\dashboard\\\\src\\\\Pages\\\\Home.jsx\";\nimport React, { Component } from \"react\";\nimport L from \"leaflet\";\nimport { Map, TileLayer, Marker, Popup } from \"react-leaflet\";\nvar mapIcon = L.icon({\n  iconUrl: require(\"../img/placeholder.svg\"),\n  iconRetinaUrl: require(\"../img/placeholder.svg\"),\n  iconSize: [50, 70],\n  iconAnchor: [12.3, 41],\n  popupAnchor: [11, -28]\n});\n\nclass Home extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      deviceData: [],\n      // info: [],\n      locations: [],\n      lng: 53.9868,\n      lat: 26.5325,\n      zoom: 13\n    };\n\n    this.renderMarker = () => {\n      return this.state.locations.map(item => {\n        const position = [item.latitude, item.longitude];\n        return /*#__PURE__*/React.createElement(Marker, {\n          position: position,\n          icon: mapIcon,\n          key: item.lat,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(Popup, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 11\n          }\n        }, \"A pretty CSS3 popup. \", /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 34\n          }\n        }), \" Easily customizable.\"));\n      });\n    };\n  }\n\n  componentDidMount() {\n    var requestOptions = {\n      method: \"GET\",\n      redirect: \"follow\"\n    };\n    fetch(\"https://api.lora.atrovan.com/api/telemetry/all?beginTime=1588686342&endTime=1588689942\", requestOptions).then(response => response.json()).then(result => {\n      this.setState({\n        deviceData: [...this.state.deviceData, ...result.deviceData]\n      });\n      const array = this.state.deviceData;\n\n      for (let i = 0; i < array.length; i++) {\n        const element = array[i].options.rxInfo[0].location; // this.setState({ :  });\n\n        console.log(element);\n        this.setState({\n          locations: [...this.state.locations, element]\n        });\n        console.log(this.state.locations);\n      }\n    }).catch(error => console.log(\"error\", error));\n  }\n\n  render() {\n    const position = [this.state.lat, this.state.lng];\n    return /*#__PURE__*/React.createElement(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Map, {\n      center: position,\n      zoom: this.state.zoom,\n      className: \"h-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TileLayer, {\n      attribution: \"&copy <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }\n    }), this.renderMarker()));\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["C:/Users/HP/Desktop/work/dashboard/src/Pages/Home.jsx"],"names":["React","Component","L","Map","TileLayer","Marker","Popup","mapIcon","icon","iconUrl","require","iconRetinaUrl","iconSize","iconAnchor","popupAnchor","Home","state","deviceData","locations","lng","lat","zoom","renderMarker","map","item","position","latitude","longitude","componentDidMount","requestOptions","method","redirect","fetch","then","response","json","result","setState","array","i","length","element","options","rxInfo","location","console","log","catch","error","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport L from \"leaflet\";\r\nimport { Map, TileLayer, Marker, Popup } from \"react-leaflet\";\r\n\r\nvar mapIcon = L.icon({\r\n  iconUrl: require(\"../img/placeholder.svg\"),\r\n  iconRetinaUrl: require(\"../img/placeholder.svg\"),\r\n  iconSize: [50, 70],\r\n  iconAnchor: [12.3, 41],\r\n  popupAnchor: [11, -28],\r\n});\r\n\r\nclass Home extends Component {\r\n  state = {\r\n    deviceData: [],\r\n    // info: [],\r\n    locations: [],\r\n    lng: 53.9868,\r\n    lat: 26.5325,\r\n    zoom: 13,\r\n  };\r\n\r\n  componentDidMount() {\r\n    var requestOptions = {\r\n      method: \"GET\",\r\n      redirect: \"follow\",\r\n    };\r\n\r\n    fetch(\r\n      \"https://api.lora.atrovan.com/api/telemetry/all?beginTime=1588686342&endTime=1588689942\",\r\n      requestOptions\r\n    )\r\n      .then((response) => response.json())\r\n      .then((result) => {\r\n        this.setState({\r\n          deviceData: [...this.state.deviceData, ...result.deviceData],\r\n        });\r\n        const array = this.state.deviceData;\r\n        for (let i = 0; i < array.length; i++) {\r\n          const element = array[i].options.rxInfo[0].location;\r\n          // this.setState({ :  });\r\n          console.log(element);\r\n          this.setState({ locations: [...this.state.locations, element] });\r\n          console.log(this.state.locations);\r\n        }\r\n      })\r\n      .catch((error) => console.log(\"error\", error));\r\n  }\r\n\r\n  renderMarker = () => {\r\n    return this.state.locations.map((item) => {\r\n      const position = [item.latitude, item.longitude];\r\n      return (\r\n        <Marker position={position} icon={mapIcon} key={item.lat}>\r\n          <Popup>\r\n            A pretty CSS3 popup. <br /> Easily customizable.\r\n          </Popup>\r\n        </Marker>\r\n      );\r\n    });\r\n  };\r\n  render() {\r\n    const position = [this.state.lat, this.state.lng];\r\n    return (\r\n      <section>\r\n        <Map center={position} zoom={this.state.zoom} className=\"h-100\">\r\n          <TileLayer\r\n            attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n          />\r\n          {this.renderMarker()}\r\n        </Map>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}