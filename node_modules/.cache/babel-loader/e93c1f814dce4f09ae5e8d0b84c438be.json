{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\dashboard redux\\\\dashboard\\\\src\\\\Pages\\\\Home.jsx\";\nimport React, { Component } from \"react\";\nimport L from \"leaflet\";\nimport { fetchDevicesID, fetchDevicesData, fetchAllBuildings, fetchBuildingAssets } from \"../store/actions\";\nimport { connect } from \"react-redux\";\nimport { Map, TileLayer, Marker, Popup } from \"react-leaflet\";\nvar mapIcon = L.icon({\n  iconUrl: require(\"../img/placeholder.svg\"),\n  iconRetinaUrl: require(\"../img/placeholder.svg\"),\n  iconSize: [50, 70],\n  iconAnchor: [12.3, 41],\n  popupAnchor: [11, -28]\n});\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this._isMounted = false;\n\n    this.renderMarker = () => {// return this.props.info.map((item, index) => {\n      //     if (item.adr) {\n      //       // if (item.object.input2.length >= 20) {\n      //       const hex2ascii = require(\"hex2ascii\");\n      //       const hexPaketID = item.object.input2.slice(2, 34);\n      //       const packetID = hex2ascii(hexPaketID);\n      //       const hexVolt = item.object.input2.slice(150, 164);\n      //       const volt = hex2ascii(hexVolt);\n      //       const hexAmper = item.object.input2.slice(136, 150);\n      //       const amper = hex2ascii(hexAmper);\n      //       const hexP180 = item.object.input2.slice(36, 56);\n      //       const p180 = hex2ascii(hexP180);\n      //       const hexP181 = item.object.input2.slice(56, 76);\n      //       const p181 = hex2ascii(hexP181);\n      //       const hexP182 = item.object.input2.slice(76, 96);\n      //       const p182 = hex2ascii(hexP182);\n      //       const hexP183 = item.object.input2.slice(96, 116);\n      //       const p183 = hex2ascii(hexP183);\n      //       const hexP184 = item.object.input2.slice(116, 136);\n      //       const p184 = hex2ascii(hexP184);\n      //       const position = [\n      //         item.rxInfo[0].location.latitude,\n      //         item.rxInfo[0].location.longitude,\n      //       ];\n      //       return (\n      //         <Marker position={position} icon={mapIcon} key={index}>\n      //           <Popup>\n      //             <span className=\"pop-title\">اطلاعات دستگاه</span>\n      //             <div className=\"info-pop\">\n      //               <div className=\"text-left\">\n      //                 <span className=\"info-name\">نام دستگاه:</span>\n      //                 <span className=\"info-num\">{item.rxInfo[0].name}</span>\n      //               </div>\n      //               <div className=\"text-left\">\n      //                 <span className=\"info-name\">شماره شناسه:</span>\n      //                 <span className=\"info-num\">{packetID}</span>\n      //               </div>\n      //               <div className=\"text-left\">\n      //                 <span className=\"info-name\">ولتاژ:</span>\n      //                 <span className=\"info-num\">{volt}</span>\n      //               </div>\n      //               <div className=\"text-left\">\n      //                 <span className=\"info-name\">آمپر:</span>\n      //                 <span className=\"info-num\">{amper}</span>\n      //               </div>\n      //               <div className=\"text-right\">\n      //                 <span className=\"info-name\">P_1_8_0:</span>\n      //                 <span className=\"info-num\">{p180}</span>\n      //               </div>\n      //               <div className=\"text-right\">\n      //                 <span className=\"info-name\">P_1_8_1:</span>\n      //                 <span className=\"info-num\">{p181}</span>\n      //               </div>\n      //               <div className=\"text-right\">\n      //                 <span className=\"info-name\">P_1_8_2:</span>\n      //                 <span className=\"info-num\">{p182}</span>\n      //               </div>\n      //               <div className=\"text-right\">\n      //                 <span className=\"info-name\">P_1_8_3:</span>\n      //                 <span className=\"info-num\">{p183}</span>\n      //               </div>\n      //               <div className=\"text-right\">\n      //                 <span className=\"info-name\">P_1_8_4:</span>\n      //                 <span className=\"info-num\">{p184}</span>\n      //               </div>\n      //             </div>\n      //           </Popup>\n      //         </Marker>\n      //       );\n      //     // }\n      //   }\n      //   });\n    };\n\n    this.state = {\n      ID: [],\n      info: [],\n      lng: 53.982,\n      lat: 26.5425,\n      zoom: 13\n    };\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n\n    if (this._isMounted) {\n      // console.log(this.props);\n      this.props.fetchDevicesID(); // this.props.fetchDevicesData(this.props.id);\n\n      this.props.fetchAllBuildings();\n      this.props.fetchBuildingAssets(this.props.uuid);\n    }\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  render() {\n    console.log(this.props.a);\n    const position = [this.state.lat, this.state.lng];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-10 p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Map, {\n      center: position,\n      zoom: this.state.zoom,\n      className: \"h-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TileLayer, {\n      attribution: \"&copy <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }\n    }), this.renderMarker()));\n  }\n\n}\n\nconst mapStateToProps = ({\n  DevicesIDReducer,\n  DevicesDataReducer,\n  AllBuildingsReducer,\n  BuildingAssetsReducer\n}) => {\n  // console.log({AllBuildingsReducer});\n  return {\n    // id: state.ID.devicesID\n    id: DevicesIDReducer.data,\n    // info : DevicesDataReducer.data,\n    uuid: AllBuildingsReducer.data[0].uuid,\n    Assets: BuildingAssetsReducer.data\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchDevicesID,\n  fetchBuildingAssets,\n  fetchAllBuildings\n})(Home);","map":{"version":3,"sources":["C:/Users/HP/Desktop/dashboard redux/dashboard/src/Pages/Home.jsx"],"names":["React","Component","L","fetchDevicesID","fetchDevicesData","fetchAllBuildings","fetchBuildingAssets","connect","Map","TileLayer","Marker","Popup","mapIcon","icon","iconUrl","require","iconRetinaUrl","iconSize","iconAnchor","popupAnchor","Home","constructor","props","_isMounted","renderMarker","state","ID","info","lng","lat","zoom","componentDidMount","uuid","componentWillUnmount","render","console","log","a","position","mapStateToProps","DevicesIDReducer","DevicesDataReducer","AllBuildingsReducer","BuildingAssetsReducer","id","data","Assets"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport L from \"leaflet\";\r\nimport { fetchDevicesID, fetchDevicesData, fetchAllBuildings,fetchBuildingAssets } from \"../store/actions\";\r\nimport { connect } from \"react-redux\";\r\nimport { Map, TileLayer, Marker, Popup } from \"react-leaflet\";\r\n\r\nvar mapIcon = L.icon({\r\n  iconUrl: require(\"../img/placeholder.svg\"),\r\n  iconRetinaUrl: require(\"../img/placeholder.svg\"),\r\n  iconSize: [50, 70],\r\n  iconAnchor: [12.3, 41],\r\n  popupAnchor: [11, -28],\r\n});\r\n\r\nclass Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      ID: [],\r\n      info:[],\r\n      lng: 53.982,\r\n      lat: 26.5425,\r\n      zoom: 13,\r\n    };\r\n  }\r\n  _isMounted = false;\r\n\r\n  componentDidMount() {\r\n    this._isMounted = true;\r\n    if (this._isMounted) {\r\n      // console.log(this.props);\r\n      this.props.fetchDevicesID();\r\n      // this.props.fetchDevicesData(this.props.id);\r\n      this.props.fetchAllBuildings();\r\n      this.props.fetchBuildingAssets(this.props.uuid);\r\n    }\r\n\r\n  }\r\n \r\n  componentWillUnmount() {\r\n    this._isMounted = false;\r\n  }\r\n  renderMarker = () => {\r\n    // return this.props.info.map((item, index) => {\r\n    //     if (item.adr) {\r\n    //       // if (item.object.input2.length >= 20) {\r\n            \r\n    //       const hex2ascii = require(\"hex2ascii\");\r\n  \r\n    //       const hexPaketID = item.object.input2.slice(2, 34);\r\n    //       const packetID = hex2ascii(hexPaketID);\r\n  \r\n    //       const hexVolt = item.object.input2.slice(150, 164);\r\n    //       const volt = hex2ascii(hexVolt);\r\n  \r\n    //       const hexAmper = item.object.input2.slice(136, 150);\r\n    //       const amper = hex2ascii(hexAmper);\r\n  \r\n    //       const hexP180 = item.object.input2.slice(36, 56);\r\n    //       const p180 = hex2ascii(hexP180);\r\n  \r\n    //       const hexP181 = item.object.input2.slice(56, 76);\r\n    //       const p181 = hex2ascii(hexP181);\r\n  \r\n    //       const hexP182 = item.object.input2.slice(76, 96);\r\n    //       const p182 = hex2ascii(hexP182);\r\n  \r\n    //       const hexP183 = item.object.input2.slice(96, 116);\r\n    //       const p183 = hex2ascii(hexP183);\r\n  \r\n    //       const hexP184 = item.object.input2.slice(116, 136);\r\n    //       const p184 = hex2ascii(hexP184);\r\n  \r\n    //       const position = [\r\n    //         item.rxInfo[0].location.latitude,\r\n    //         item.rxInfo[0].location.longitude,\r\n    //       ];\r\n    //       return (\r\n    //         <Marker position={position} icon={mapIcon} key={index}>\r\n    //           <Popup>\r\n    //             <span className=\"pop-title\">اطلاعات دستگاه</span>\r\n  \r\n    //             <div className=\"info-pop\">\r\n    //               <div className=\"text-left\">\r\n    //                 <span className=\"info-name\">نام دستگاه:</span>\r\n    //                 <span className=\"info-num\">{item.rxInfo[0].name}</span>\r\n    //               </div>\r\n    //               <div className=\"text-left\">\r\n    //                 <span className=\"info-name\">شماره شناسه:</span>\r\n    //                 <span className=\"info-num\">{packetID}</span>\r\n    //               </div>\r\n    //               <div className=\"text-left\">\r\n    //                 <span className=\"info-name\">ولتاژ:</span>\r\n    //                 <span className=\"info-num\">{volt}</span>\r\n    //               </div>\r\n    //               <div className=\"text-left\">\r\n    //                 <span className=\"info-name\">آمپر:</span>\r\n    //                 <span className=\"info-num\">{amper}</span>\r\n    //               </div>\r\n    //               <div className=\"text-right\">\r\n    //                 <span className=\"info-name\">P_1_8_0:</span>\r\n    //                 <span className=\"info-num\">{p180}</span>\r\n    //               </div>\r\n    //               <div className=\"text-right\">\r\n    //                 <span className=\"info-name\">P_1_8_1:</span>\r\n    //                 <span className=\"info-num\">{p181}</span>\r\n    //               </div>\r\n    //               <div className=\"text-right\">\r\n    //                 <span className=\"info-name\">P_1_8_2:</span>\r\n    //                 <span className=\"info-num\">{p182}</span>\r\n    //               </div>\r\n    //               <div className=\"text-right\">\r\n    //                 <span className=\"info-name\">P_1_8_3:</span>\r\n    //                 <span className=\"info-num\">{p183}</span>\r\n    //               </div>\r\n    //               <div className=\"text-right\">\r\n    //                 <span className=\"info-name\">P_1_8_4:</span>\r\n    //                 <span className=\"info-num\">{p184}</span>\r\n    //               </div>\r\n    //             </div>\r\n    //           </Popup>\r\n    //         </Marker>\r\n    //       );\r\n    //     // }\r\n    //   }\r\n    //   });\r\n  };\r\n  render() {\r\n    console.log(this.props.a);\r\n    const position = [this.state.lat, this.state.lng];\r\n    return (\r\n      <div className=\"col-lg-10 p-0\">\r\n        <Map center={position} zoom={this.state.zoom} className=\"h-100\">\r\n          <TileLayer\r\n            attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n          />\r\n          {this.renderMarker()}\r\n        </Map>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({DevicesIDReducer,DevicesDataReducer,AllBuildingsReducer,BuildingAssetsReducer}) => {\r\n  // console.log({AllBuildingsReducer});\r\n  return {\r\n    // id: state.ID.devicesID\r\n    id: DevicesIDReducer.data,\r\n    // info : DevicesDataReducer.data,\r\n    uuid: AllBuildingsReducer.data[0].uuid,\r\n    Assets: BuildingAssetsReducer.data\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { fetchDevicesID, fetchBuildingAssets ,fetchAllBuildings})(\r\n  Home\r\n);\r\n"]},"metadata":{},"sourceType":"module"}