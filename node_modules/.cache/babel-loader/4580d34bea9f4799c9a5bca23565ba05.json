{"ast":null,"code":"import axios from \"axios\";\nexport const fetchDevicesID = () => async dispatch => {\n  const response = await axios.get(\"https://api.lora.atrovan.com/api/telemetry/devices/id\"); // console.log(response.data);\n\n  dispatch({\n    type: \"FETCH_DEVICES_ID\",\n    payload: response.data\n  });\n};\nexport const fetchDevicesData = id => async dispatch => {\n  for (let i = 0; i < id.length; i++) {\n    const elementID = id[i];\n    const response = await axios.get(`https://api.lora.atrovan.com/api/telemetry/device/latest/${elementID}`);\n    const info = [];\n    info.push(response.data.options);\n    dispatch({\n      type: \"FETCH_DEVICES_DATA\",\n      payload: response.data\n    });\n  }\n}; //   fetch(\n//     \"https://api.lora.atrovan.com/api/telemetry/devices/id\",\n//     RequestOptions\n//   )\n//     .then((response) => response.json())\n//     .then((result) => {\n//       console.log(result);\n//       const ID = result.devicesID;\n//       for (let i = 0; i < ID.length; i++) {\n//         const elementID = ID[i];\n//         if (this._isMounted) {\n//           this.setState({ ID: [...this.state.ID, elementID] });\n//         }\n//       }\n//       for (let i = 0; i < this.state.ID.length; i++) {\n//         const elementID = this.state.ID[i];\n//         fetch(\n//           `https://api.lora.atrovan.com/api/telemetry/device/latest/${elementID}`,\n//           RequestOptions\n//         )\n//           .then((response) => response.json())\n//           .then((result) => {\n//             if (this._isMounted) {\n//               if (result.options.object) {\n//               console.log(result);\n//               this.setState({\n//                 info: [...this.state.info, result.options],\n//               });\n//             }\n//             // console.log(this.state.info);\n//             }\n//           })\n//           .catch((error) => console.log(\"error\", error));\n//       }\n//     })\n//     .catch((error) => console.log(\"error\", error));","map":{"version":3,"sources":["C:/Users/HP/Desktop/dashboard redux/dashboard/src/store/actions/index.js"],"names":["axios","fetchDevicesID","dispatch","response","get","type","payload","data","fetchDevicesData","id","i","length","elementID","info","push","options"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,cAAc,GAAG,MAAM,MAAOC,QAAP,IAAoB;AACtD,QAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAN,CACrB,uDADqB,CAAvB,CADsD,CAItD;;AACAF,EAAAA,QAAQ,CAAC;AACPG,IAAAA,IAAI,EAAE,kBADC;AAEPC,IAAAA,OAAO,EAAEH,QAAQ,CAACI;AAFX,GAAD,CAAR;AAMD,CAXM;AAaP,OAAO,MAAMC,gBAAgB,GAAIC,EAAD,IAAQ,MAAOP,QAAP,IAAoB;AAClD,OAAK,IAAIQ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,EAAE,CAACE,MAAvB,EAA+BD,CAAC,EAAhC,EAAoC;AACtC,UAAME,SAAS,GAAGH,EAAE,CAACC,CAAD,CAApB;AACN,UAAMP,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAN,CACpB,4DAA2DQ,SAAU,EADjD,CAAvB;AAGF,UAAMC,IAAI,GAAG,EAAb;AACAA,IAAAA,IAAI,CAACC,IAAL,CAAUX,QAAQ,CAACI,IAAT,CAAcQ,OAAxB;AACEb,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAE,oBADC;AAEPC,MAAAA,OAAO,EAAEH,QAAQ,CAACI;AAFX,KAAD,CAAR;AAIC;AACF,CAbM,C,CAcP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import axios from \"axios\";\r\n\r\nexport const fetchDevicesID = () => async (dispatch) => {\r\n  const response = await axios.get(\r\n    \"https://api.lora.atrovan.com/api/telemetry/devices/id\"\r\n  );\r\n  // console.log(response.data);\r\n  dispatch({\r\n    type: \"FETCH_DEVICES_ID\",\r\n    payload: response.data,\r\n  });\r\n\r\n\r\n};\r\n\r\nexport const fetchDevicesData = (id) => async (dispatch) => {\r\n          for (let i = 0; i < id.length; i++) {\r\n        const elementID = id[i];\r\n  const response = await axios.get(\r\n    `https://api.lora.atrovan.com/api/telemetry/device/latest/${elementID}`\r\n  );\r\nconst info = []\r\ninfo.push(response.data.options)\r\n  dispatch({\r\n    type: \"FETCH_DEVICES_DATA\",\r\n    payload: response.data,\r\n  })\r\n  }\r\n};\r\n//   fetch(\r\n//     \"https://api.lora.atrovan.com/api/telemetry/devices/id\",\r\n//     RequestOptions\r\n//   )\r\n//     .then((response) => response.json())\r\n//     .then((result) => {\r\n//       console.log(result);\r\n//       const ID = result.devicesID;\r\n//       for (let i = 0; i < ID.length; i++) {\r\n//         const elementID = ID[i];\r\n//         if (this._isMounted) {\r\n//           this.setState({ ID: [...this.state.ID, elementID] });\r\n//         }\r\n//       }\r\n//       for (let i = 0; i < this.state.ID.length; i++) {\r\n//         const elementID = this.state.ID[i];\r\n//         fetch(\r\n//           `https://api.lora.atrovan.com/api/telemetry/device/latest/${elementID}`,\r\n//           RequestOptions\r\n//         )\r\n//           .then((response) => response.json())\r\n//           .then((result) => {\r\n//             if (this._isMounted) {\r\n//               if (result.options.object) {\r\n//               console.log(result);\r\n//               this.setState({\r\n//                 info: [...this.state.info, result.options],\r\n//               });\r\n//             }\r\n//             // console.log(this.state.info);\r\n//             }\r\n//           })\r\n//           .catch((error) => console.log(\"error\", error));\r\n//       }\r\n//     })\r\n//     .catch((error) => console.log(\"error\", error));\r\n"]},"metadata":{},"sourceType":"module"}