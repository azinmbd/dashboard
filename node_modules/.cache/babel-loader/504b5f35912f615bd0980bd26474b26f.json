{"ast":null,"code":"import axios from \"axios\";\nexport const fetchDevicesID = () => async dispatch => {\n  const response = await axios.get(\"https://api.lora.atrovan.com/api/telemetry/devices/id\"); // console.log(response.data);\n\n  dispatch({\n    type: \"FETCH_DEVICES_ID\",\n    payload: response.data\n  });\n};\nexport const fetchDevicesData = id => async dispatch => {\n  array.forEach(element => {});\n\n  for (let i = 0; i < id.length; i++) {\n    const elementID = id[i];\n    const response = await axios.get(`https://api.lora.atrovan.com/api/telemetry/device/latest/${elementID}`);\n    dispatch({\n      type: \"FETCH_DEVICES_DATA\",\n      payload: response.data\n    });\n  }\n}; // export const fetchAllBuildings = () => async (dispatch) => {\n//   const response = await axios.get(\n//     \"https://api.lora.atrovan.com/api/buildings/all?password=asd123\"\n//   );\n// console.log(response);\n//   dispatch({\n//     type: \"FETCH_ALL_BUILDINGS\",\n//     payload: response.data,\n//   })\n// };","map":{"version":3,"sources":["C:/Users/HP/Desktop/dashboard redux/dashboard/src/store/actions/index.js"],"names":["axios","fetchDevicesID","dispatch","response","get","type","payload","data","fetchDevicesData","id","array","forEach","element","i","length","elementID"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,cAAc,GAAG,MAAM,MAAOC,QAAP,IAAoB;AACtD,QAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAN,CACrB,uDADqB,CAAvB,CADsD,CAItD;;AACAF,EAAAA,QAAQ,CAAC;AACPG,IAAAA,IAAI,EAAE,kBADC;AAEPC,IAAAA,OAAO,EAAEH,QAAQ,CAACI;AAFX,GAAD,CAAR;AAMD,CAXM;AAeP,OAAO,MAAMC,gBAAgB,GAAIC,EAAD,IAAQ,MAAOP,QAAP,IAAoB;AAC1DQ,EAAAA,KAAK,CAACC,OAAN,CAAcC,OAAO,IAAI,CAExB,CAFD;;AAGQ,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,EAAE,CAACK,MAAvB,EAA+BD,CAAC,EAAhC,EAAoC;AACtC,UAAME,SAAS,GAAGN,EAAE,CAACI,CAAD,CAApB;AACN,UAAMV,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAN,CACpB,4DAA2DW,SAAU,EADjD,CAAvB;AAIAb,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAE,oBADC;AAEPC,MAAAA,OAAO,EAAEH,QAAQ,CAACI;AAFX,KAAD,CAAR;AAIC;AACF,CAfM,C,CAmBP;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA","sourcesContent":["import axios from \"axios\";\r\n\r\nexport const fetchDevicesID = () => async (dispatch) => {\r\n  const response = await axios.get(\r\n    \"https://api.lora.atrovan.com/api/telemetry/devices/id\"\r\n  );\r\n  // console.log(response.data);\r\n  dispatch({\r\n    type: \"FETCH_DEVICES_ID\",\r\n    payload: response.data,\r\n  });\r\n\r\n\r\n};\r\n\r\n\r\n\r\nexport const fetchDevicesData = (id) => async (dispatch) => {\r\n  array.forEach(element => {\r\n    \r\n  });\r\n          for (let i = 0; i < id.length; i++) {\r\n        const elementID = id[i];\r\n  const response = await axios.get(\r\n    `https://api.lora.atrovan.com/api/telemetry/device/latest/${elementID}`\r\n  );\r\n\r\n  dispatch({\r\n    type: \"FETCH_DEVICES_DATA\",\r\n    payload: response.data,\r\n  })\r\n  }\r\n};\r\n\r\n\r\n\r\n// export const fetchAllBuildings = () => async (dispatch) => {\r\n\r\n\r\n//   const response = await axios.get(\r\n//     \"https://api.lora.atrovan.com/api/buildings/all?password=asd123\"\r\n//   );\r\n// console.log(response);\r\n\r\n//   dispatch({\r\n//     type: \"FETCH_ALL_BUILDINGS\",\r\n//     payload: response.data,\r\n//   })\r\n  \r\n// };\r\n"]},"metadata":{},"sourceType":"module"}