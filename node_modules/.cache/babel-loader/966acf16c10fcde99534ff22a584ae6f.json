{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport axios from 'axios';\nconst INITIAL_STATE = [];\nconst BuildingAssets = createSlice({\n  initialState: INITIAL_STATE,\n  name: 'BuildingID',\n  reducers: {\n    BuildingAssetsReducer(state, action) {\n      state.data = action.payload;\n    }\n\n  }\n});\nexport const fetchBuildingAssets = uuid => async dispatch => {\n  console.log(uuid);\n  const response = await axios.get(`https://api.lora.atrovan.com/api/assets/building/${uuid}?limit=100`);\n  dispatch(AllBuildingsReducer(response.data.data)); // dispatch({\n  //   type: 'FETCH_BUILDING_ASSETS',\n  //   payload: response.data.data,\n  // });\n};\nconst {\n  BuildingAssetsReducer\n} = BuildingAssets.actions;\nexport default BuildingAssets.reducer;","map":{"version":3,"sources":["C:/Users/HP/Desktop/dashboard redux/dashboard/src/store/slices/FetchBuildingsSlice.js"],"names":["createSlice","axios","INITIAL_STATE","BuildingAssets","initialState","name","reducers","BuildingAssetsReducer","state","action","data","payload","fetchBuildingAssets","uuid","dispatch","console","log","response","get","AllBuildingsReducer","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,aAAa,GAAG,EAAtB;AAEA,MAAMC,cAAc,GAAGH,WAAW,CAAC;AACjCI,EAAAA,YAAY,EAAEF,aADmB;AAEjCG,EAAAA,IAAI,EAAE,YAF2B;AAGjCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,qBAAqB,CAACC,KAAD,EAAQC,MAAR,EAAgB;AACnCD,MAAAA,KAAK,CAACE,IAAN,GAAaD,MAAM,CAACE,OAApB;AACD;;AAHO;AAHuB,CAAD,CAAlC;AASA,OAAO,MAAMC,mBAAmB,GAAIC,IAAD,IAAU,MAAOC,QAAP,IAAoB;AAC7DC,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,QAAMI,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,GAAN,CACpB,oDAAmDL,IAAK,YADpC,CAAvB;AAGAC,EAAAA,QAAQ,CAACK,mBAAmB,CAACF,QAAQ,CAACP,IAAT,CAAcA,IAAf,CAApB,CAAR,CAL6D,CAM7D;AACA;AACA;AACA;AACD,CAVI;AAYP,MAAM;AAAEH,EAAAA;AAAF,IAA4BJ,cAAc,CAACiB,OAAjD;AAIA,eAAejB,cAAc,CAACkB,OAA9B","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\n\r\nconst INITIAL_STATE = [];\r\n\r\nconst BuildingAssets = createSlice({\r\n  initialState: INITIAL_STATE,\r\n  name: 'BuildingID',\r\n  reducers: {\r\n    BuildingAssetsReducer(state, action) {\r\n      state.data = action.payload;\r\n    },\r\n  },\r\n});\r\nexport const fetchBuildingAssets = (uuid) => async (dispatch) => {\r\n    console.log(uuid);\r\n    const response = await axios.get(\r\n      `https://api.lora.atrovan.com/api/assets/building/${uuid}?limit=100`\r\n    );\r\n    dispatch(AllBuildingsReducer(response.data.data));\r\n    // dispatch({\r\n    //   type: 'FETCH_BUILDING_ASSETS',\r\n    //   payload: response.data.data,\r\n    // });\r\n  };\r\n\r\nconst { BuildingAssetsReducer } = BuildingAssets.actions;\r\n\r\n\r\n\r\nexport default BuildingAssets.reducer;\r\n"]},"metadata":{},"sourceType":"module"}