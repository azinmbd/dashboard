{"ast":null,"code":"import axios from \"axios\";\nexport const fetchDevicesID = () => async dispatch => {\n  const response = await axios.get(\"https://api.lora.atrovan.com/api/telemetry/devices/id\");\n  console.log(response.data);\n  dispatch({\n    type: \"FETCH_DEVICES_ID\",\n    payload: response.data\n  }); //   const id = response.data.devicesID;\n  //   fetchDevicesData(id);\n  //   console.log(ID);\n  //   for (let i = 0; i < ID.length; i++) {\n  //     const elementID = ID[i];\n  //     fetch(\n  //       `https://api.lora.atrovan.com/api/telemetry/device/latest/${elementID}`,\n  //       RequestOptions\n  //     )\n  //       .then((response) => response.json())\n  //       .then((result) => {\n  //         if (this._isMounted) {\n  //           if (result.options.object) {\n  //             console.log(result);\n  //             this.setState({\n  //               info: [...this.state.info, result.options],\n  //             });\n  //           }\n  //           // console.log(this.state.info);\n  //         }\n  //       })\n  //       .catch((error) => console.log(\"error\", error));\n  //   }\n};\nexport const fetchDevicesData = id => async dispatch => {\n  console.log(id); //           for (let i = 0; i < id.length; i++) {\n  //         const elementID = id[i];\n  //   const response = await axios.get(\n  //     `https://api.lora.atrovan.com/api/telemetry/device/latest/${elementID}`\n  //   );\n  //   console.log(response.data);\n  //   dispatch({\n  //     type: \"FETCH_DEVICES_DATA\",\n  //     payload: response.data,\n  //   });}\n}; //   fetch(\n//     \"https://api.lora.atrovan.com/api/telemetry/devices/id\",\n//     RequestOptions\n//   )\n//     .then((response) => response.json())\n//     .then((result) => {\n//       console.log(result);\n//       const ID = result.devicesID;\n//       for (let i = 0; i < ID.length; i++) {\n//         const elementID = ID[i];\n//         if (this._isMounted) {\n//           this.setState({ ID: [...this.state.ID, elementID] });\n//         }\n//       }\n//       for (let i = 0; i < this.state.ID.length; i++) {\n//         const elementID = this.state.ID[i];\n//         fetch(\n//           `https://api.lora.atrovan.com/api/telemetry/device/latest/${elementID}`,\n//           RequestOptions\n//         )\n//           .then((response) => response.json())\n//           .then((result) => {\n//             if (this._isMounted) {\n//               if (result.options.object) {\n//               console.log(result);\n//               this.setState({\n//                 info: [...this.state.info, result.options],\n//               });\n//             }\n//             // console.log(this.state.info);\n//             }\n//           })\n//           .catch((error) => console.log(\"error\", error));\n//       }\n//     })\n//     .catch((error) => console.log(\"error\", error));","map":{"version":3,"sources":["C:/Users/HP/Desktop/dashboard redux/dashboard/src/actions/index.js"],"names":["axios","fetchDevicesID","dispatch","response","get","console","log","data","type","payload","fetchDevicesData","id"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,cAAc,GAAG,MAAM,MAAOC,QAAP,IAAoB;AACtD,QAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAN,CACrB,uDADqB,CAAvB;AAGAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACI,IAArB;AACAL,EAAAA,QAAQ,CAAC;AACPM,IAAAA,IAAI,EAAE,kBADC;AAEPC,IAAAA,OAAO,EAAEN,QAAQ,CAACI;AAFX,GAAD,CAAR,CALsD,CAUxD;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACC,CAlCM;AAoCP,OAAO,MAAMG,gBAAgB,GAAIC,EAAD,IAAQ,MAAOT,QAAP,IAAoB;AACxDG,EAAAA,OAAO,CAACC,GAAR,CAAYK,EAAZ,EADwD,CAE5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACC,CAZM,C,CAaP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import axios from \"axios\";\r\n\r\nexport const fetchDevicesID = () => async (dispatch) => {\r\n  const response = await axios.get(\r\n    \"https://api.lora.atrovan.com/api/telemetry/devices/id\"\r\n  );\r\n  console.log(response.data);\r\n  dispatch({\r\n    type: \"FETCH_DEVICES_ID\",\r\n    payload: response.data,\r\n  });\r\n\r\n//   const id = response.data.devicesID;\r\n//   fetchDevicesData(id);\r\n//   console.log(ID);\r\n\r\n//   for (let i = 0; i < ID.length; i++) {\r\n//     const elementID = ID[i];\r\n//     fetch(\r\n//       `https://api.lora.atrovan.com/api/telemetry/device/latest/${elementID}`,\r\n//       RequestOptions\r\n//     )\r\n//       .then((response) => response.json())\r\n//       .then((result) => {\r\n//         if (this._isMounted) {\r\n//           if (result.options.object) {\r\n//             console.log(result);\r\n//             this.setState({\r\n//               info: [...this.state.info, result.options],\r\n//             });\r\n//           }\r\n//           // console.log(this.state.info);\r\n//         }\r\n//       })\r\n//       .catch((error) => console.log(\"error\", error));\r\n//   }\r\n};\r\n\r\nexport const fetchDevicesData = (id) => async (dispatch) => {\r\n    console.log(id);\r\n//           for (let i = 0; i < id.length; i++) {\r\n//         const elementID = id[i];\r\n//   const response = await axios.get(\r\n//     `https://api.lora.atrovan.com/api/telemetry/device/latest/${elementID}`\r\n//   );\r\n//   console.log(response.data);\r\n//   dispatch({\r\n//     type: \"FETCH_DEVICES_DATA\",\r\n//     payload: response.data,\r\n//   });}\r\n};\r\n//   fetch(\r\n//     \"https://api.lora.atrovan.com/api/telemetry/devices/id\",\r\n//     RequestOptions\r\n//   )\r\n//     .then((response) => response.json())\r\n//     .then((result) => {\r\n//       console.log(result);\r\n//       const ID = result.devicesID;\r\n//       for (let i = 0; i < ID.length; i++) {\r\n//         const elementID = ID[i];\r\n//         if (this._isMounted) {\r\n//           this.setState({ ID: [...this.state.ID, elementID] });\r\n//         }\r\n//       }\r\n//       for (let i = 0; i < this.state.ID.length; i++) {\r\n//         const elementID = this.state.ID[i];\r\n//         fetch(\r\n//           `https://api.lora.atrovan.com/api/telemetry/device/latest/${elementID}`,\r\n//           RequestOptions\r\n//         )\r\n//           .then((response) => response.json())\r\n//           .then((result) => {\r\n//             if (this._isMounted) {\r\n//               if (result.options.object) {\r\n//               console.log(result);\r\n//               this.setState({\r\n//                 info: [...this.state.info, result.options],\r\n//               });\r\n//             }\r\n//             // console.log(this.state.info);\r\n//             }\r\n//           })\r\n//           .catch((error) => console.log(\"error\", error));\r\n//       }\r\n//     })\r\n//     .catch((error) => console.log(\"error\", error));\r\n"]},"metadata":{},"sourceType":"module"}