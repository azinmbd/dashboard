{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\work\\\\dashboard\\\\src\\\\Pages\\\\Home.jsx\";\nimport React, { Component } from \"react\";\nimport L from \"leaflet\";\nimport { Map, TileLayer, Marker, Popup } from \"react-leaflet\";\nvar mapIcon = L.icon({\n  iconUrl: require(\"../img/placeholder.svg\"),\n  iconRetinaUrl: require(\"../img/placeholder.svg\"),\n  iconSize: [50, 70],\n  iconAnchor: [12.3, 41],\n  popupAnchor: [11, -28]\n});\n\nclass Home extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      deviceData: [],\n      ID: [],\n      info: [],\n      locations: [],\n      lng: 53.9868,\n      lat: 26.5325,\n      zoom: 13\n    };\n\n    this.renderMarker = () => {\n      return this.state.info.map(item => {\n        const position = [item.location.latitude, item.location.longitude];\n        return /*#__PURE__*/React.createElement(Marker, {\n          position: position,\n          icon: mapIcon,\n          key: item.gatewayID,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(Popup, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"info-pop\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 18\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          className: \"info-name\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }\n        }, \"\\u0646\\u0627\\u0645 \\u062F\\u0633\\u062A\\u06A9\\u0627\\u0647:\"), /*#__PURE__*/React.createElement(\"span\", {\n          className: \"info-\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }\n        }, \"\\u0646\\u0627\\u0645 \\u062F\\u0633\\u062A\\u06A9\\u0627\\u0647:\"))));\n      });\n    };\n  }\n\n  componentDidMount() {\n    var RequestOptions = {\n      method: \"GET\",\n      redirect: \"follow\"\n    };\n    fetch(\"https://api.lora.atrovan.com/api/telemetry/devices/id\", RequestOptions).then(response => response.json()).then(result => {\n      const ID = result.devicesID;\n\n      for (let i = 0; i < ID.length; i++) {\n        const element = ID[i];\n        this.setState({\n          ID: [...this.state.ID, element]\n        });\n      }\n\n      for (let i = 0; i < this.state.ID.length; i++) {\n        const element = this.state.ID[i];\n        fetch(`https://api.lora.atrovan.com/api/telemetry/device/latest/${element}`, RequestOptions).then(response => response.json()).then(result => {\n          this.setState({\n            locations: [...this.state.deviceData, result.options.rxInfo[0].location]\n          });\n          this.setState({\n            info: [...this.state.deviceData, result.options.rxInfo[0]]\n          }); // console.log(result.options.rxInfo[0]);\n        }).catch(error => console.log(\"error\", error));\n      }\n    }).catch(error => console.log(\"error\", error));\n  }\n\n  render() {\n    const position = [this.state.lat, this.state.lng];\n    return /*#__PURE__*/React.createElement(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Map, {\n      center: position,\n      zoom: this.state.zoom,\n      className: \"h-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TileLayer, {\n      attribution: \"&copy <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }\n    }), this.renderMarker()));\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["C:/Users/HP/Desktop/work/dashboard/src/Pages/Home.jsx"],"names":["React","Component","L","Map","TileLayer","Marker","Popup","mapIcon","icon","iconUrl","require","iconRetinaUrl","iconSize","iconAnchor","popupAnchor","Home","state","deviceData","ID","info","locations","lng","lat","zoom","renderMarker","map","item","position","location","latitude","longitude","gatewayID","componentDidMount","RequestOptions","method","redirect","fetch","then","response","json","result","devicesID","i","length","element","setState","options","rxInfo","catch","error","console","log","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport L from \"leaflet\";\r\nimport { Map, TileLayer, Marker, Popup } from \"react-leaflet\";\r\n\r\nvar mapIcon = L.icon({\r\n  iconUrl: require(\"../img/placeholder.svg\"),\r\n  iconRetinaUrl: require(\"../img/placeholder.svg\"),\r\n  iconSize: [50, 70],\r\n  iconAnchor: [12.3, 41],\r\n  popupAnchor: [11, -28],\r\n});\r\n\r\nclass Home extends Component {\r\n  state = {\r\n    deviceData: [],\r\n    ID: [],\r\n    info: [],\r\n    locations: [],\r\n    lng: 53.9868,\r\n    lat: 26.5325,\r\n    zoom: 13,\r\n  };\r\n\r\n  componentDidMount() {\r\n    var RequestOptions = {\r\n      method: \"GET\",\r\n      redirect: \"follow\",\r\n    };\r\n    \r\n    fetch(\"https://api.lora.atrovan.com/api/telemetry/devices/id\", RequestOptions)\r\n    .then((response) => response.json())\r\n    .then((result) => {\r\n      const ID = result.devicesID;\r\n      for (let i = 0; i < ID.length; i++) {\r\n        const element = ID[i];\r\n        this.setState({ ID: [...this.state.ID, element] });\r\n      }\r\n      for (let i = 0; i < this.state.ID.length; i++) {\r\n        const element = this.state.ID[i];\r\n        fetch(\r\n          `https://api.lora.atrovan.com/api/telemetry/device/latest/${element}`,\r\n          RequestOptions\r\n        )\r\n          .then((response) => response.json())\r\n          .then((result) => {\r\n            this.setState({\r\n              locations: [\r\n                ...this.state.deviceData,\r\n                result.options.rxInfo[0].location,\r\n              ],\r\n            });\r\n            this.setState({\r\n              info: [...this.state.deviceData, result.options.rxInfo[0]],\r\n            });\r\n            // console.log(result.options.rxInfo[0]);\r\n          })\r\n          .catch((error) => console.log(\"error\", error));\r\n      }\r\n    })\r\n    .catch((error) => console.log(\"error\", error));\r\n\r\n    \r\n  }\r\n\r\n  renderMarker = () => {\r\n    return this.state.info.map((item) => {\r\n      const position = [item.location.latitude, item.location.longitude];\r\n      return (\r\n        <Marker position={position} icon={mapIcon} key={item.gatewayID}>\r\n          <Popup><div className=\"info-pop\">\r\n            <span className=\"info-name\">نام دستکاه:</span>\r\n            <span className=\"info-\">نام دستکاه:</span>\r\n            </div></Popup>\r\n        </Marker>\r\n      );\r\n    });\r\n  };\r\n  render() {\r\n    const position = [this.state.lat, this.state.lng];\r\n    return (\r\n      <section>\r\n        <Map center={position} zoom={this.state.zoom} className=\"h-100\">\r\n          <TileLayer\r\n            attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n          />\r\n          {this.renderMarker()}\r\n        </Map>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}