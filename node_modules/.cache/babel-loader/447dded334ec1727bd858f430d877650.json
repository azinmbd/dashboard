{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\work\\\\dashboard\\\\src\\\\Pages\\\\Home.jsx\";\nimport React, { Component } from \"react\";\nimport L from \"leaflet\";\nimport { Map, TileLayer, Marker, Popup } from \"react-leaflet\";\nvar mapIcon = L.icon({\n  iconUrl: require(\"../img/placeholder.svg\"),\n  iconRetinaUrl: require(\"../img/placeholder.svg\"),\n  iconSize: [50, 70],\n  iconAnchor: [12.3, 41],\n  popupAnchor: [11, -28]\n});\n\nclass Home extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      deviceData: [],\n      ID: [],\n      info: [],\n      locations: [],\n      lng: 53.9868,\n      lat: 26.5325,\n      zoom: 13\n    };\n  }\n\n  componentDidMount() {\n    var RequestOptions = {\n      method: \"GET\",\n      redirect: \"follow\"\n    };\n    fetch(\"https://api.lora.atrovan.com/api/telemetry/devices/id\", RequestOptions).then(response => response.json()).then(result => {\n      const ID = result.devicesID;\n\n      for (let i = 0; i < ID.length; i++) {\n        const element = ID[i];\n        this.setState({\n          ID: [...this.state.ID, element]\n        });\n      }\n\n      for (let i = 0; i < this.state.ID.length; i++) {\n        const element = this.state.ID[i];\n        fetch(`https://api.lora.atrovan.com/api/telemetry/device/latest/${element}`, RequestOptions).then(response => response.json()).then(result => {\n          // console.log(result);\n          this.setState({\n            locations: [...this.state.deviceData, result.options.rxInfo[0].location]\n          });\n          this.setState({\n            info: [...this.state.deviceData, result.options]\n          }); // console.log(result.options.rxInfo[0]);\n        }).catch(error => console.log(\"error\", error));\n      }\n    }).catch(error => console.log(\"error\", error));\n  }\n\n  render() {\n    const position = [this.state.lat, this.state.lng];\n    return /*#__PURE__*/React.createElement(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Map, {\n      center: position,\n      zoom: this.state.zoom,\n      className: \"h-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TileLayer, {\n      attribution: \"&copy <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }\n    }), this.renderMarker()));\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["C:/Users/HP/Desktop/work/dashboard/src/Pages/Home.jsx"],"names":["React","Component","L","Map","TileLayer","Marker","Popup","mapIcon","icon","iconUrl","require","iconRetinaUrl","iconSize","iconAnchor","popupAnchor","Home","state","deviceData","ID","info","locations","lng","lat","zoom","componentDidMount","RequestOptions","method","redirect","fetch","then","response","json","result","devicesID","i","length","element","setState","options","rxInfo","location","catch","error","console","log","render","position","renderMarker"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport L from \"leaflet\";\r\nimport { Map, TileLayer, Marker, Popup } from \"react-leaflet\";\r\n\r\nvar mapIcon = L.icon({\r\n  iconUrl: require(\"../img/placeholder.svg\"),\r\n  iconRetinaUrl: require(\"../img/placeholder.svg\"),\r\n  iconSize: [50, 70],\r\n  iconAnchor: [12.3, 41],\r\n  popupAnchor: [11, -28],\r\n});\r\n\r\nclass Home extends Component {\r\n  state = {\r\n    deviceData: [],\r\n    ID: [],\r\n    info: [],\r\n    locations: [],\r\n    lng: 53.9868,\r\n    lat: 26.5325,\r\n    zoom: 13,\r\n  };\r\n\r\n  componentDidMount() {\r\n    var RequestOptions = {\r\n      method: \"GET\",\r\n      redirect: \"follow\",\r\n    };\r\n\r\n    fetch(\r\n      \"https://api.lora.atrovan.com/api/telemetry/devices/id\",\r\n      RequestOptions\r\n    )\r\n      .then((response) => response.json())\r\n      .then((result) => {\r\n        const ID = result.devicesID;\r\n        for (let i = 0; i < ID.length; i++) {\r\n          const element = ID[i];\r\n          this.setState({ ID: [...this.state.ID, element] });\r\n        }\r\n        for (let i = 0; i < this.state.ID.length; i++) {\r\n          const element = this.state.ID[i];\r\n          fetch(\r\n            `https://api.lora.atrovan.com/api/telemetry/device/latest/${element}`,\r\n            RequestOptions\r\n          )\r\n            .then((response) => response.json())\r\n            .then((result) => {\r\n              // console.log(result);\r\n\r\n              this.setState({\r\n                locations: [\r\n                  ...this.state.deviceData,\r\n                  result.options.rxInfo[0].location,\r\n                ],\r\n              });\r\n              this.setState({\r\n                info: [...this.state.deviceData, result.options],\r\n              });\r\n              // console.log(result.options.rxInfo[0]);\r\n            })\r\n            .catch((error) => console.log(\"error\", error));\r\n        }\r\n      })\r\n      .catch((error) => console.log(\"error\", error));\r\n  }\r\n\r\n \r\n  render() {\r\n    const position = [this.state.lat, this.state.lng];\r\n    return (\r\n      <section>\r\n        <Map center={position} zoom={this.state.zoom} className=\"h-100\">\r\n          <TileLayer\r\n            attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n          />\r\n          {this.renderMarker()}\r\n        </Map>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}