{"ast":null,"code":"import axios from \"axios\";\nexport const fetchDevicesID = () => async dispatch => {\n  const response = await axios.get(\"https://api.lora.atrovan.com/api/telemetry/devices/id\");\n  console.log(response.data);\n  dispatch({\n    type: \"FETCH_DEVICES_ID\",\n    payload: response.data\n  });\n  const ID = response.data.devicesID;\n  console.log(ID);\n\n  for (let i = 0; i < ID.length; i++) {\n    const elementID = ID[i]; // if (this._isMounted) {\n\n    this.setState({\n      ID: [...this.state.ID, elementID]\n    }); // }\n  }\n\n  for (let i = 0; i < this.state.ID.length; i++) {\n    const elementID = this.state.ID[i];\n    fetch(`https://api.lora.atrovan.com/api/telemetry/device/latest/${elementID}`, RequestOptions).then(response => response.json()).then(result => {\n      if (this._isMounted) {\n        if (result.options.object) {\n          console.log(result);\n          this.setState({\n            info: [...this.state.info, result.options]\n          });\n        } // console.log(this.state.info);\n\n      }\n    }).catch(error => console.log(\"error\", error));\n  }\n}; //   fetch(\n//     \"https://api.lora.atrovan.com/api/telemetry/devices/id\",\n//     RequestOptions\n//   )\n//     .then((response) => response.json())\n//     .then((result) => {\n//       console.log(result);\n//       const ID = result.devicesID;\n//       for (let i = 0; i < ID.length; i++) {\n//         const elementID = ID[i];\n//         if (this._isMounted) {\n//           this.setState({ ID: [...this.state.ID, elementID] });\n//         }\n//       }\n//       for (let i = 0; i < this.state.ID.length; i++) {\n//         const elementID = this.state.ID[i];\n//         fetch(\n//           `https://api.lora.atrovan.com/api/telemetry/device/latest/${elementID}`,\n//           RequestOptions\n//         )\n//           .then((response) => response.json())\n//           .then((result) => {\n//             if (this._isMounted) {\n//               if (result.options.object) {\n//               console.log(result);\n//               this.setState({\n//                 info: [...this.state.info, result.options],\n//               });\n//             }\n//             // console.log(this.state.info);\n//             }\n//           })\n//           .catch((error) => console.log(\"error\", error));\n//       }\n//     })\n//     .catch((error) => console.log(\"error\", error));","map":{"version":3,"sources":["C:/Users/HP/Desktop/dashboard redux/dashboard/src/actions/index.js"],"names":["axios","fetchDevicesID","dispatch","response","get","console","log","data","type","payload","ID","devicesID","i","length","elementID","setState","state","fetch","RequestOptions","then","json","result","_isMounted","options","object","info","catch","error"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,cAAc,GAAG,MAAM,MAAMC,QAAN,IAAkB;AAClD,QAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAN,CACrB,uDADqB,CAAvB;AAGAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACI,IAArB;AACAL,EAAAA,QAAQ,CAAC;AACPM,IAAAA,IAAI,EAAE,kBADC;AAEPC,IAAAA,OAAO,EAAEN,QAAQ,CAACI;AAFX,GAAD,CAAR;AAIA,QAAMG,EAAE,GAAGP,QAAQ,CAACI,IAAT,CAAcI,SAAzB;AACAN,EAAAA,OAAO,CAACC,GAAR,CAAYI,EAAZ;;AACE,OAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,EAAE,CAACG,MAAvB,EAA+BD,CAAC,EAAhC,EAAoC;AAClC,UAAME,SAAS,GAAGJ,EAAE,CAACE,CAAD,CAApB,CADkC,CAElC;;AACE,SAAKG,QAAL,CAAc;AAAEL,MAAAA,EAAE,EAAE,CAAC,GAAG,KAAKM,KAAL,CAAWN,EAAf,EAAmBI,SAAnB;AAAN,KAAd,EAHgC,CAIlC;AACD;;AACD,OAAK,IAAIF,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKI,KAAL,CAAWN,EAAX,CAAcG,MAAlC,EAA0CD,CAAC,EAA3C,EAA+C;AAC7C,UAAME,SAAS,GAAG,KAAKE,KAAL,CAAWN,EAAX,CAAcE,CAAd,CAAlB;AACAK,IAAAA,KAAK,CACF,4DAA2DH,SAAU,EADnE,EAEHI,cAFG,CAAL,CAIGC,IAJH,CAIShB,QAAD,IAAcA,QAAQ,CAACiB,IAAT,EAJtB,EAKGD,IALH,CAKSE,MAAD,IAAY;AAChB,UAAI,KAAKC,UAAT,EAAqB;AACnB,YAAID,MAAM,CAACE,OAAP,CAAeC,MAAnB,EAA2B;AAC3BnB,UAAAA,OAAO,CAACC,GAAR,CAAYe,MAAZ;AACA,eAAKN,QAAL,CAAc;AACZU,YAAAA,IAAI,EAAE,CAAC,GAAG,KAAKT,KAAL,CAAWS,IAAf,EAAqBJ,MAAM,CAACE,OAA5B;AADM,WAAd;AAGD,SANoB,CAOrB;;AACC;AACF,KAfH,EAgBGG,KAhBH,CAgBUC,KAAD,IAAWtB,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBqB,KAArB,CAhBpB;AAiBD;AACJ,CArCI,C,CAuCP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import axios from \"axios\";\r\n\r\nexport const fetchDevicesID = () => async dispatch => {\r\n    const response = await axios.get(\r\n      \"https://api.lora.atrovan.com/api/telemetry/devices/id\"\r\n    );\r\n    console.log(response.data);\r\n    dispatch({\r\n      type: \"FETCH_DEVICES_ID\",\r\n      payload: response.data\r\n    });\r\n    const ID = response.data.devicesID;\r\n    console.log(ID);\r\n      for (let i = 0; i < ID.length; i++) {\r\n        const elementID = ID[i];\r\n        // if (this._isMounted) {\r\n          this.setState({ ID: [...this.state.ID, elementID] });\r\n        // }\r\n      }\r\n      for (let i = 0; i < this.state.ID.length; i++) {\r\n        const elementID = this.state.ID[i];\r\n        fetch(\r\n          `https://api.lora.atrovan.com/api/telemetry/device/latest/${elementID}`,\r\n          RequestOptions\r\n        )\r\n          .then((response) => response.json())\r\n          .then((result) => {\r\n            if (this._isMounted) {\r\n              if (result.options.object) {\r\n              console.log(result);\r\n              this.setState({\r\n                info: [...this.state.info, result.options],\r\n              });\r\n            }\r\n            // console.log(this.state.info);\r\n            }\r\n          })\r\n          .catch((error) => console.log(\"error\", error));\r\n      }\r\n  };\r\n  \r\n//   fetch(\r\n//     \"https://api.lora.atrovan.com/api/telemetry/devices/id\",\r\n//     RequestOptions\r\n//   )\r\n//     .then((response) => response.json())\r\n//     .then((result) => {\r\n//       console.log(result);\r\n//       const ID = result.devicesID;\r\n//       for (let i = 0; i < ID.length; i++) {\r\n//         const elementID = ID[i];\r\n//         if (this._isMounted) {\r\n//           this.setState({ ID: [...this.state.ID, elementID] });\r\n//         }\r\n//       }\r\n//       for (let i = 0; i < this.state.ID.length; i++) {\r\n//         const elementID = this.state.ID[i];\r\n//         fetch(\r\n//           `https://api.lora.atrovan.com/api/telemetry/device/latest/${elementID}`,\r\n//           RequestOptions\r\n//         )\r\n//           .then((response) => response.json())\r\n//           .then((result) => {\r\n//             if (this._isMounted) {\r\n//               if (result.options.object) {\r\n//               console.log(result);\r\n//               this.setState({\r\n//                 info: [...this.state.info, result.options],\r\n//               });\r\n//             }\r\n//             // console.log(this.state.info);\r\n//             }\r\n//           })\r\n//           .catch((error) => console.log(\"error\", error));\r\n//       }\r\n//     })\r\n//     .catch((error) => console.log(\"error\", error));"]},"metadata":{},"sourceType":"module"}